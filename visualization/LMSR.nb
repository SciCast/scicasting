(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    149371,       3379]
NotebookOptionsPosition[    146856,       3294]
NotebookOutlinePosition[    147198,       3309]
CellTagsIndexPosition[    147155,       3306]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"yesCost", "[", 
   RowBox[{"i_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"100", "*", 
   RowBox[{"Log", "[", 
    RowBox[{"2", ",", 
     RowBox[{"t", "/", "i"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6159812165989704`*^9, 3.615981235005023*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"noCost", "[", 
   RowBox[{"i_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"100", "*", 
   RowBox[{"Log", "[", 
    RowBox[{"2", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"100", "-", "t"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"100", "-", "i"}], ")"}]}]}], "]"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Manipulate[
  Plot[{yesCost[start,target],
        noCost[start,target]},
       {target,0.5,99.5},
       ImageSize\[Rule]Large,
       AxesLabel\[Rule]{\"%\",Points},
       PerformanceGoal\[Rule]\"Speed\",
       PlotStyle\[Rule]{Green,Red},
       PlotRange->{{0,100},Automatic},
       GridLines -> {{start,tradeto,100-start},{}},
       Ticks -> {{0,10,25,50,75,90,100,{start,S},{100-start,\
\[EmptyDownTriangle]},{tradeto,T}},Automatic},
       Epilog->{Text[Round[yesCost[start,tradeto]],
                     {tradeto,If[start<tradeto,15,-28]+yesCost[start,tradeto]}\
],
                Text[Round[noCost[start,tradeto]],
                     {tradeto,If[start<tradeto,-28,15]+noCost[start,tradeto]}]
               }
       ],
  {{start,N[33.3]},0.5,99.5,0.5,Appearance\[Rule]\"Labeled\"},
  {{tradeto,N[66.6]},0.5,99.5,0.5,Appearance\[Rule]\"Labeled\"},
  SaveDefinitions -> True]\
\>", "Input",
 CellChangeTimes->{{3.615945113275978*^9, 3.6159451529732485`*^9}, {
   3.615945188030254*^9, 3.615945191191435*^9}, {3.6159452302056665`*^9, 
   3.6159452680288296`*^9}, {3.615945310304248*^9, 3.6159453231169806`*^9}, {
   3.6159453614051704`*^9, 3.615945394074039*^9}, {3.61594557382232*^9, 
   3.615945616759776*^9}, {3.615945745255125*^9, 3.6159457506144323`*^9}, {
   3.615945917141957*^9, 3.6159459223472548`*^9}, {3.6159460180757303`*^9, 
   3.615946090900895*^9}, 3.615946144801978*^9, {3.6159468772498717`*^9, 
   3.615946950206045*^9}, {3.615981224253408*^9, 3.615981248681805*^9}, {
   3.6159812955054836`*^9, 3.6159812962895284`*^9}, {3.6159813387949595`*^9, 
   3.615981339216984*^9}, {3.6159814541745586`*^9, 3.6159815715372715`*^9}, {
   3.615981647194599*^9, 3.6159816825096188`*^9}, {3.6159820600792146`*^9, 
   3.615982213355982*^9}, {3.615982256440446*^9, 3.615982279961791*^9}, {
   3.6159824321764975`*^9, 3.6159824828553963`*^9}, {3.6159825636040144`*^9, 
   3.6159825821780767`*^9}, {3.6159826611645947`*^9, 
   3.6159827693807845`*^9}, {3.6159835658583403`*^9, 
   3.6159836041335297`*^9}, {3.6159838407400627`*^9, 
   3.6159839168284144`*^9}, {3.6159843631329412`*^9, 3.61598436818023*^9}, {
   3.6159849539307337`*^9, 3.615984954551769*^9}, {3.6159880845497947`*^9, 
   3.615988110729292*^9}, {3.6159882435498886`*^9, 3.6159882440499177`*^9}, {
   3.615988281252045*^9, 3.61598828762941*^9}, {3.6159883497879653`*^9, 
   3.615988363883772*^9}, {3.615992565268077*^9, 3.6159925725064907`*^9}, {
   3.6159926661438465`*^9, 3.615992668183964*^9}, 3.6160090357631354`*^9, {
   3.616024589412753*^9, 3.616024622767661*^9}, {3.6160246646090546`*^9, 
   3.61602468009194*^9}, {3.6160247866230335`*^9, 3.616024815083661*^9}, {
   3.616024900646555*^9, 3.616024921278735*^9}, {3.6162864732329073`*^9, 
   3.6162864760250673`*^9}},
 CellID->124],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`start$$ = 33.3, $CellContext`tradeto$$ = 
    66.6, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`start$$], 33.3}, 0.5, 99.5, 0.5}, {{
       Hold[$CellContext`tradeto$$], 66.6}, 0.5, 99.5, 0.5}}, 
    Typeset`size$$ = {576., {172., 176.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`start$88318$$ = 0, $CellContext`tradeto$88319$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`start$$ = 33.3, $CellContext`tradeto$$ = 
        66.6}, "ControllerVariables" :> {
        Hold[$CellContext`start$$, $CellContext`start$88318$$, 0], 
        Hold[$CellContext`tradeto$$, $CellContext`tradeto$88319$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`yesCost[$CellContext`start$$, $CellContext`target], 
         $CellContext`noCost[$CellContext`start$$, $CellContext`target]}, \
{$CellContext`target, 0.5, 99.5}, ImageSize -> Large, 
        AxesLabel -> {"%", $CellContext`Points}, PerformanceGoal -> "Speed", 
        PlotStyle -> {Green, Red}, PlotRange -> {{0, 100}, Automatic}, 
        GridLines -> {{$CellContext`start$$, $CellContext`tradeto$$, 
           100 - $CellContext`start$$}, {}}, 
        Ticks -> {{
          0, 10, 25, 50, 75, 90, 
           100, {$CellContext`start$$, $CellContext`S}, {
           100 - $CellContext`start$$, $CellContext`\[EmptyDownTriangle]}, \
{$CellContext`tradeto$$, $CellContext`T}}, Automatic}, Epilog -> {
          Text[
           Round[
            $CellContext`yesCost[$CellContext`start$$, \
$CellContext`tradeto$$]], {$CellContext`tradeto$$, 
            If[$CellContext`start$$ < $CellContext`tradeto$$, 
              15, -28] + $CellContext`yesCost[$CellContext`start$$, \
$CellContext`tradeto$$]}], 
          Text[
           Round[
            $CellContext`noCost[$CellContext`start$$, \
$CellContext`tradeto$$]], {$CellContext`tradeto$$, 
            If[$CellContext`start$$ < $CellContext`tradeto$$, -28, 
              15] + $CellContext`noCost[$CellContext`start$$, \
$CellContext`tradeto$$]}]}], 
      "Specifications" :> {{{$CellContext`start$$, 33.3}, 0.5, 99.5, 0.5, 
         Appearance -> "Labeled"}, {{$CellContext`tradeto$$, 66.6}, 0.5, 99.5,
          0.5, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{627., {231., 238.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`yesCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, $CellContext`t/$CellContext`i], $CellContext`noCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, (100 - $CellContext`t)/(100 - $CellContext`i)]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6159452699529395`*^9, 3.61594532642717*^9, {3.6159453785971537`*^9, 
   3.6159453951991034`*^9}, {3.6159455922213726`*^9, 3.615945619090909*^9}, 
   3.6159457529535656`*^9, 3.6159459289116297`*^9, {3.615946068976641*^9, 
   3.615946092683997*^9}, 3.6159461472571187`*^9, {3.615946924998603*^9, 
   3.6159469509050846`*^9}, 3.6159812131047707`*^9, 3.615981249338843*^9, 
   3.615981298489654*^9, 3.615981339905023*^9, {3.615981525678649*^9, 
   3.6159815728263454`*^9}, {3.615981658139225*^9, 3.6159816831956577`*^9}, {
   3.6159821034806967`*^9, 3.6159821505243874`*^9}, 3.6159821823532085`*^9, 
   3.6159822153970985`*^9, {3.6159822602826653`*^9, 3.615982281851899*^9}, {
   3.61598244865444*^9, 3.6159824838204513`*^9}, {3.6159825726765337`*^9, 
   3.615982583233137*^9}, 3.6159826647798014`*^9, {3.6159827221970854`*^9, 
   3.615982729397497*^9}, 3.6159827701048255`*^9, 3.6159835745178356`*^9, 
   3.615983604892573*^9, {3.6159838551828885`*^9, 3.615983918561514*^9}, 
   3.6159843688132668`*^9, 3.615984956115858*^9, 3.615988111508336*^9, 
   3.615988244552946*^9, 3.615988288102437*^9, {3.615988338016292*^9, 
   3.6159883643507986`*^9}, 3.615992573418543*^9, 3.615992670062071*^9, 
   3.6159946902716203`*^9, 3.616009040282394*^9, 3.616012573740496*^9, 
   3.616013143372077*^9, 3.616013365353774*^9, 3.6160145136884546`*^9, 
   3.6160185651211834`*^9, {3.616024591730886*^9, 3.6160246234096975`*^9}, 
   3.61602467116943*^9, {3.6160247929763966`*^9, 3.6160248160177145`*^9}, {
   3.6160249119221997`*^9, 3.6160249229628315`*^9}, 3.616035810593568*^9, 
   3.6162447561118245`*^9, 3.6162864767661095`*^9, 3.616376681739539*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cost", "[", 
   RowBox[{"start_", ",", "target_"}], "]"}], ":=", 
  RowBox[{"Min", "[", 
   RowBox[{
    RowBox[{"yesCost", "[", 
     RowBox[{"start", ",", "target"}], "]"}], ",", " ", 
    RowBox[{"noCost", "[", 
     RowBox[{"start", ",", "target"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.616009422593261*^9, 3.616009440219269*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"reward", "[", 
   RowBox[{"start_", ",", "target_"}], "]"}], ":=", 
  RowBox[{"Max", "[", 
   RowBox[{
    RowBox[{"yesCost", "[", 
     RowBox[{"start", ",", "target"}], "]"}], ",", 
    RowBox[{"noCost", "[", 
     RowBox[{"start", ",", "target"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6160094434954567`*^9, 3.6160094550411167`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pushUpBy", "[", 
   RowBox[{"start_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"100", "-", 
   RowBox[{"25", " ", 
    SuperscriptBox["2", 
     RowBox[{"2", "-", 
      FractionBox["p", "100"]}]]}], "+", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{
      RowBox[{"-", "p"}], "/", "100"}]], " ", "start"}]}]}]], "Input",
 CellChangeTimes->{{3.6160109017128615`*^9, 3.6160109207709513`*^9}, {
  3.6160113715387344`*^9, 3.616011376241003*^9}, {3.616014454491069*^9, 
  3.61601449384932*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pushDownBy", "[", 
   RowBox[{"start_", ",", "p_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{
     RowBox[{"-", "p"}], "/", "100"}]], " ", "start"}]}]], "Input",
 CellChangeTimes->{{3.6160113788131504`*^9, 3.6160113835254197`*^9}, {
  3.6160114460839977`*^9, 3.6160114463970156`*^9}, {3.616011513523855*^9, 
  3.6160115220103407`*^9}, {3.616012563045884*^9, 3.6160125689322214`*^9}, {
  3.6160145072440863`*^9, 3.6160145102092557`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tinyRound", "[", "v_", "]"}], ":=", 
  RowBox[{"Round", "[", 
   RowBox[{"v", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", "v", "]"}], "<", "1"}], "&&", 
       RowBox[{"(", 
        RowBox[{"v", "\[NotEqual]", "0"}], ")"}]}], ",", "0.1", ",", "1"}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.616374651621423*^9, 3.6163747012312603`*^9}}],

Cell["\<\
This function encodes the rules of simple mode as I understand them.
It results a list of rows to include in the output, so that when the current \
value is in the consensus region,
it can produce the outcomes for choosing \[OpenCurlyDoubleQuote]Higher\
\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]Lower\
\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.6165429382928696`*^9, 3.616543002703554*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"simpleTrade", "[", 
   RowBox[{
   "name_", ",", "upper_", ",", "lower_", ",", "start_", ",", "pointLimit_"}],
    "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"v", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"v", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"v", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"tinyRound", "[", 
           RowBox[{"v", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Darker", "[", "Green", "]"}]}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"tinyRound", "[", 
           RowBox[{"v", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Darker", "[", "Red", "]"}]}], "]"}], ",", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "6", "]"}], "]"}], ",", "0.1"}], "]"}]}], "}"}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"target", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"upper", "+", "lower"}], ")"}], "/", "2"}]}], ",", 
        "\[IndentingNewLine]", "         ", 
        RowBox[{"mean", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"upper", "+", "lower"}], ")"}], "/", "2"}], "+", 
            "start"}], ")"}], "/", "2"}]}], ",", "\[IndentingNewLine]", 
        "         ", 
        RowBox[{"lowerLimit", "=", 
         RowBox[{"pushDownBy", "[", 
          RowBox[{"start", ",", "pointLimit"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "         ", 
        RowBox[{"upperLimit", "=", 
         RowBox[{"pushUpBy", "[", 
          RowBox[{"start", ",", "pointLimit"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"lower", "\[LessEqual]", "start", "<", "upper"}], ",", 
        "\[IndentingNewLine]", "            ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"upperLimit", "<", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"upper", "+", "start"}], ")"}], "/", "2"}]}], ",", 
            "\[IndentingNewLine]", "                ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"StringJoin", "[", 
               RowBox[{"name", ",", "\"\< (Higher)\>\""}], "]"}], ",", 
              "upper", ",", "lower", ",", 
              RowBox[{"yesCost", "[", 
               RowBox[{"start", ",", "upperLimit"}], "]"}], ",", 
              RowBox[{"noCost", "[", 
               RowBox[{"start", ",", "upperLimit"}], "]"}], ",", 
              "upperLimit"}], "}"}], ",", "\[IndentingNewLine]", 
            "                ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"StringJoin", "[", 
               RowBox[{"name", ",", "\"\< (Higher)\>\""}], "]"}], ",", 
              "upper", ",", "lower", ",", 
              RowBox[{"yesCost", "[", 
               RowBox[{"start", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"upper", "+", "start"}], ")"}], "/", "2"}]}], "]"}],
               ",", 
              RowBox[{"noCost", "[", 
               RowBox[{"start", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"upper", "+", "start"}], ")"}], "/", "2"}]}], "]"}],
               ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"upper", "+", "start"}], ")"}], "/", "2"}]}], "}"}]}],
            "]"}], ",", "\[IndentingNewLine]", "           ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"StringJoin", "[", 
             RowBox[{"name", ",", " ", "\"\< (Same)\>\""}], "]"}], ",", 
            "upper", ",", "lower", ",", "0", ",", "0", ",", "start"}], "}"}], 
          ",", "\[IndentingNewLine]", "           ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"lower", "+", "start"}], ")"}], "/", "2"}], "<", 
             "lowerLimit"}], ",", "\[IndentingNewLine]", "                ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"StringJoin", "[", 
               RowBox[{"name", ",", "\"\< (Lower)\>\""}], "]"}], ",", "upper",
               ",", "lower", ",", 
              RowBox[{"yesCost", "[", 
               RowBox[{"start", ",", "lowerLimit"}], "]"}], ",", 
              RowBox[{"noCost", "[", 
               RowBox[{"start", ",", "lowerLimit"}], "]"}], ",", 
              "lowerLimit"}], "}"}], ",", "\[IndentingNewLine]", 
            "                ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"StringJoin", "[", 
               RowBox[{"name", ",", "\"\< (Lower)\>\""}], "]"}], ",", "upper",
               ",", "lower", ",", 
              RowBox[{"yesCost", "[", 
               RowBox[{"start", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"lower", "+", "start"}], ")"}], "/", "2"}]}], "]"}],
               ",", 
              RowBox[{"noCost", "[", 
               RowBox[{"start", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"lower", "+", "start"}], ")"}], "/", "2"}]}], "]"}],
               ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"lower", "+", "start"}], ")"}], "/", "2"}]}], "}"}]}],
            "]"}]}], "\[IndentingNewLine]", "\t", "}"}], ",", 
        "\[IndentingNewLine]", "            ", 
        RowBox[{"upper", "<=", "start"}], ",", "\[IndentingNewLine]", 
        "            ", 
        RowBox[{"{", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"mean", "<", "lowerLimit"}], ",", "\[IndentingNewLine]", 
           "                ", 
           RowBox[{"{", 
            RowBox[{"name", ",", "upper", ",", "lower", ",", 
             RowBox[{"yesCost", "[", 
              RowBox[{"start", ",", "lowerLimit"}], "]"}], ",", 
             RowBox[{"noCost", "[", 
              RowBox[{"start", ",", "lowerLimit"}], "]"}], ",", 
             "lowerLimit"}], "}"}], ",", "\[IndentingNewLine]", 
           "                ", 
           RowBox[{"{", 
            RowBox[{"name", ",", "upper", ",", "lower", ",", 
             RowBox[{"yesCost", "[", 
              RowBox[{"start", ",", "mean"}], "]"}], ",", 
             RowBox[{"noCost", "[", 
              RowBox[{"start", ",", "mean"}], "]"}], ",", "mean"}], "}"}]}], 
          "]"}], "}"}], ",", "\[IndentingNewLine]", "            ", 
        RowBox[{"start", "<", "lower"}], ",", "\[IndentingNewLine]", 
        "            ", 
        RowBox[{"{", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"upperLimit", "<", "mean"}], ",", "\[IndentingNewLine]", 
           "                ", 
           RowBox[{"{", 
            RowBox[{"name", ",", "upper", ",", "lower", ",", 
             RowBox[{"yesCost", "[", 
              RowBox[{"start", ",", "upperLimit"}], "]"}], ",", 
             RowBox[{"noCost", "[", 
              RowBox[{"start", ",", "upperLimit"}], "]"}], ",", 
             "upperLimit"}], "}"}], ",", "\[IndentingNewLine]", 
           "                ", 
           RowBox[{"{", 
            RowBox[{"name", ",", "upper", ",", "lower", ",", 
             RowBox[{"yesCost", "[", 
              RowBox[{"start", ",", "mean"}], "]"}], ",", 
             RowBox[{"noCost", "[", 
              RowBox[{"start", ",", "mean"}], "]"}], ",", "mean"}], "}"}]}], 
          "]"}], "}"}]}], "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6160093632588673`*^9, 3.616009397802843*^9}, 
   3.6160095133764534`*^9, {3.6160099263690753`*^9, 3.616010032090122*^9}, {
   3.6160102204938984`*^9, 3.616010296261232*^9}, {3.616010404850443*^9, 
   3.6160104347861547`*^9}, 3.616010505445196*^9, {3.616010561090379*^9, 
   3.6160106041878443`*^9}, {3.6160115561082907`*^9, 3.616011878441727*^9}, {
   3.6160122715792136`*^9, 3.6160122757894545`*^9}, {3.61601304202028*^9, 
   3.616013137839761*^9}, {3.6160132892904234`*^9, 3.616013292603613*^9}, {
   3.616013673573403*^9, 3.6160136802987876`*^9}, {3.616014571810779*^9, 
   3.6160146188554697`*^9}, {3.616015021381493*^9, 3.616015027878865*^9}, {
   3.6163732396306615`*^9, 3.6163732629099927`*^9}, {3.6163734483606*^9, 
   3.616373478803341*^9}, {3.6163735742117987`*^9, 3.616373596770089*^9}, {
   3.616373635331294*^9, 3.6163737185420537`*^9}, {3.616373835355735*^9, 
   3.616373843409196*^9}, {3.616373903505633*^9, 3.616373932268278*^9}, {
   3.616374022358431*^9, 3.616374025715623*^9}, {3.616374167231717*^9, 
   3.6163741680587645`*^9}, {3.6163742111242275`*^9, 
   3.6163742196027126`*^9}, {3.616374257077856*^9, 3.616374549204565*^9}, {
   3.61637458199344*^9, 3.616374598087361*^9}, {3.6163746286951113`*^9, 
   3.616374646133109*^9}, {3.6163746812541175`*^9, 3.616374682452186*^9}, {
   3.616374735556224*^9, 3.616374756741435*^9}, {3.6163750606598186`*^9, 
   3.616375069483323*^9}, {3.6163751212462835`*^9, 3.6163751259735537`*^9}, {
   3.616375369755498*^9, 3.6163754136740093`*^9}, {3.6163754536402955`*^9, 
   3.6163754658769956`*^9}, {3.616543317464557*^9, 3.616543356864811*^9}, {
   3.616593947997458*^9, 3.616593994243103*^9}, {3.616594037415572*^9, 
   3.6165940462080755`*^9}}],

Cell[TextData[StyleBox["Simple Mode Calculator", "Section"]], "Text",
 CellChangeTimes->{{3.616542906330042*^9, 3.616542909418218*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Prepend", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"simpleTrade", "[", 
            RowBox[{
            "\"\<Almost surely\>\"", ",", " ", "100", ",", "90", ",", "start",
              ",", 
             RowBox[{"available", "*", ".01"}]}], "]"}], ",", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"simpleTrade", "[", 
            RowBox[{
            "\"\<Very likely\>\"", ",", "90", ",", "80", ",", "start", ",", 
             RowBox[{"available", "*", ".01"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"simpleTrade", "[", 
            RowBox[{"\"\<Likely\>\"", ",", "80", ",", "60", ",", "start", ",", 
             RowBox[{"available", "*", ".01"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"simpleTrade", "[", 
            RowBox[{
            "\"\<As likely as not\>\"", ",", "60", ",", "40", ",", "start", 
             ",", 
             RowBox[{"available", "*", ".01"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"simpleTrade", "[", 
            RowBox[{
            "\"\<Unlikely\>\"", ",", "40", ",", "20", ",", "start", ",", 
             RowBox[{"available", "*", ".01"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"simpleTrade", "[", 
            RowBox[{
            "\"\<Very unlikely\>\"", ",", "20", ",", "10", ",", "start", ",", 
             RowBox[{"available", "*", ".01"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"simpleTrade", "[", 
            RowBox[{
            "\"\<Almost surely not\>\"", ",", "10", ",", "0", ",", "start", 
             ",", 
             RowBox[{"available", "*", ".01"}]}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "1"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         StyleBox["\"\<Opinion\>\"",
          FontWeight->"Plain"], ",", "\"\<Upper %\>\"", ",", 
         "\"\<Lower %\>\"", ",", "\"\<Resolves\\nTrue\>\"", ",", 
         "\"\<Resolves\\nFalse\>\"", ",", "\"\<Result%\>\""}], "}"}]}], "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"ItemSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Scaled", "[", "0.2", "]"}], ",", 
         RowBox[{"Scaled", "[", ".07", "]"}]}], "}"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Dividers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"start", ",", "50"}], "}"}], ",", "0.5", ",", "99.5", ",", 
     "0.5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"available", ",", "5000"}], "}"}], ",", "100", ",", "5000", ",",
      "10", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.615996471382494*^9, 3.6159966164487915`*^9}, 
   3.6160090639177456`*^9, {3.6160091051311035`*^9, 3.6160092853464108`*^9}, {
   3.616010300892497*^9, 3.616010326510962*^9}, 3.6160122190272074`*^9, {
   3.6160123056121597`*^9, 3.6160124308573236`*^9}, 3.6160126256514654`*^9, {
   3.6160132960708113`*^9, 3.616013350832943*^9}, 3.616013437576905*^9, {
   3.6160145941230555`*^9, 3.6160145973372393`*^9}, 3.61601488932094*^9, {
   3.616373509703109*^9, 3.616373537498698*^9}, {3.616373611702943*^9, 
   3.6163736118379507`*^9}, {3.616374032983039*^9, 3.6163740518131156`*^9}, {
   3.616375227286349*^9, 3.616375347814243*^9}, {3.6165430261848965`*^9, 
   3.6165430273249617`*^9}, {3.616543068638325*^9, 3.6165430907625904`*^9}, {
   3.616592735621114*^9, 3.6165928075372276`*^9}, {3.6165928633614206`*^9, 
   3.616592889940941*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`available$$ = 5000, $CellContext`start$$ = 
    75.5, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`start$$], 50}, 0.5, 99.5, 0.5}, {{
       Hold[$CellContext`available$$], 5000}, 100, 5000, 10}}, 
    Typeset`size$$ = {581., {87., 94.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`start$745280$$ = 0, $CellContext`available$745281$$ = 
    0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`available$$ = 5000, $CellContext`start$$ = 
        50}, "ControllerVariables" :> {
        Hold[$CellContext`start$$, $CellContext`start$745280$$, 0], 
        Hold[$CellContext`available$$, $CellContext`available$745281$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[
        Prepend[
         Flatten[{
           $CellContext`simpleTrade[
           "Almost surely", 100, 
            90, $CellContext`start$$, $CellContext`available$$ 0.01], 
           $CellContext`simpleTrade[
           "Very likely", 90, 
            80, $CellContext`start$$, $CellContext`available$$ 0.01], 
           $CellContext`simpleTrade[
           "Likely", 80, 60, $CellContext`start$$, $CellContext`available$$ 
            0.01], 
           $CellContext`simpleTrade[
           "As likely as not", 60, 
            40, $CellContext`start$$, $CellContext`available$$ 0.01], 
           $CellContext`simpleTrade[
           "Unlikely", 40, 20, $CellContext`start$$, $CellContext`available$$ 
            0.01], 
           $CellContext`simpleTrade[
           "Very unlikely", 20, 
            10, $CellContext`start$$, $CellContext`available$$ 0.01], 
           $CellContext`simpleTrade[
           "Almost surely not", 10, 
            0, $CellContext`start$$, $CellContext`available$$ 0.01]}, 1], {
         "Opinion", "Upper %", "Lower %", "Resolves\nTrue", "Resolves\nFalse",
           "Result%"}], ItemSize -> {{
           Scaled[0.2], 
           Scaled[0.07]}}, Frame -> True, Dividers -> {{1, 1}, {1, 1}}], 
      "Specifications" :> {{{$CellContext`start$$, 50}, 0.5, 99.5, 0.5, 
         Appearance -> "Labeled"}, {{$CellContext`available$$, 5000}, 100, 
         5000, 10, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{632., {148., 155.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`simpleTrade[
         Pattern[$CellContext`upper, 
          Blank[]], 
         Pattern[$CellContext`lower, 
          Blank[]], 
         Pattern[$CellContext`start, 
          Blank[]], 
         Pattern[$CellContext`pointLimit, 
          Blank[]]] := Join[{$CellContext`upper, $CellContext`lower}, 
         Map[Round, 
          
          With[{$CellContext`mean = ($CellContext`upper + $CellContext`lower)/
             2, $CellContext`lowerLimit = \
$CellContext`pushDownBy[$CellContext`start, $CellContext`pointLimit], \
$CellContext`upperLimit = $CellContext`pushUpBy[$CellContext`start, \
$CellContext`pointLimit]}, 
           
           Which[$CellContext`lower <= $CellContext`start <= \
$CellContext`upper, {0, 0}, $CellContext`mean < $CellContext`start, 
            If[$CellContext`mean < $CellContext`lowerLimit, {
              $CellContext`yesCost[$CellContext`start, \
$CellContext`lowerLimit], 
              $CellContext`noCost[$CellContext`start, \
$CellContext`lowerLimit]}, {
              $CellContext`yesCost[$CellContext`start, $CellContext`mean], 
              $CellContext`noCost[$CellContext`start, $CellContext`mean]}], \
$CellContext`start < $CellContext`mean, 
            If[$CellContext`upperLimit < $CellContext`mean, {
              $CellContext`yesCost[$CellContext`start, \
$CellContext`upperLimit], 
              $CellContext`noCost[$CellContext`start, \
$CellContext`upperLimit]}, {
              $CellContext`yesCost[$CellContext`start, $CellContext`mean], 
              $CellContext`noCost[$CellContext`start, \
$CellContext`mean]}]]]]], $CellContext`simpleTrade[
         Pattern[$CellContext`name, 
          Blank[]], 
         Pattern[$CellContext`upper, 
          Blank[]], 
         Pattern[$CellContext`lower, 
          Blank[]], 
         Pattern[$CellContext`start, 
          Blank[]], 
         Pattern[$CellContext`pointLimit, 
          Blank[]]] := Map[
         Function[$CellContext`v, {
           Part[$CellContext`v, 1], 
           Part[$CellContext`v, 2], 
           Part[$CellContext`v, 3], 
           Style[
            $CellContext`tinyRound[
             Part[$CellContext`v, 4]], 
            Darker[Green]], 
           Style[
            $CellContext`tinyRound[
             Part[$CellContext`v, 5]], 
            Darker[Red]], 
           Round[
            Part[$CellContext`v, 6], 0.1]}], 
         With[{$CellContext`target = ($CellContext`upper + \
$CellContext`lower)/
            2, $CellContext`mean = (($CellContext`upper + $CellContext`lower)/
              2 + $CellContext`start)/
            2, $CellContext`lowerLimit = \
$CellContext`pushDownBy[$CellContext`start, $CellContext`pointLimit], \
$CellContext`upperLimit = $CellContext`pushUpBy[$CellContext`start, \
$CellContext`pointLimit]}, 
          Which[
           
           Inequality[$CellContext`lower, LessEqual, $CellContext`start, 
            Less, $CellContext`upper], {
            
            If[$CellContext`upperLimit < ($CellContext`upper + \
$CellContext`start)/2, {
              
              StringJoin[$CellContext`name, 
               " (Higher)"], $CellContext`upper, $CellContext`lower, 
              $CellContext`yesCost[$CellContext`start, \
$CellContext`upperLimit], 
              $CellContext`noCost[$CellContext`start, \
$CellContext`upperLimit], $CellContext`upperLimit}, {
              
              StringJoin[$CellContext`name, 
               " (Higher)"], $CellContext`upper, $CellContext`lower, 
              $CellContext`yesCost[$CellContext`start, ($CellContext`upper + \
$CellContext`start)/2], 
              $CellContext`noCost[$CellContext`start, ($CellContext`upper + \
$CellContext`start)/2], ($CellContext`upper + $CellContext`start)/2}], {
             
             StringJoin[$CellContext`name, 
              " (Same)"], $CellContext`upper, $CellContext`lower, 0, 
             0, $CellContext`start}, 
            
            If[($CellContext`lower + $CellContext`start)/
              2 < $CellContext`lowerLimit, {
              
              StringJoin[$CellContext`name, 
               " (Lower)"], $CellContext`upper, $CellContext`lower, 
              $CellContext`yesCost[$CellContext`start, \
$CellContext`lowerLimit], 
              $CellContext`noCost[$CellContext`start, \
$CellContext`lowerLimit], $CellContext`lowerLimit}, {
              
              StringJoin[$CellContext`name, 
               " (Lower)"], $CellContext`upper, $CellContext`lower, 
              $CellContext`yesCost[$CellContext`start, ($CellContext`lower + \
$CellContext`start)/2], 
              $CellContext`noCost[$CellContext`start, ($CellContext`lower + \
$CellContext`start)/2], ($CellContext`lower + $CellContext`start)/
              2}]}, $CellContext`upper <= $CellContext`start, {
            
            If[$CellContext`mean < $CellContext`lowerLimit, \
{$CellContext`name, $CellContext`upper, $CellContext`lower, 
              $CellContext`yesCost[$CellContext`start, \
$CellContext`lowerLimit], 
              $CellContext`noCost[$CellContext`start, \
$CellContext`lowerLimit], $CellContext`lowerLimit}, {$CellContext`name, \
$CellContext`upper, $CellContext`lower, 
              $CellContext`yesCost[$CellContext`start, $CellContext`mean], 
              $CellContext`noCost[$CellContext`start, $CellContext`mean], \
$CellContext`mean}]}, $CellContext`start < $CellContext`lower, {
            
            If[$CellContext`upperLimit < $CellContext`mean, \
{$CellContext`name, $CellContext`upper, $CellContext`lower, 
              $CellContext`yesCost[$CellContext`start, \
$CellContext`upperLimit], 
              $CellContext`noCost[$CellContext`start, \
$CellContext`upperLimit], $CellContext`upperLimit}, {$CellContext`name, \
$CellContext`upper, $CellContext`lower, 
              $CellContext`yesCost[$CellContext`start, $CellContext`mean], 
              $CellContext`noCost[$CellContext`start, $CellContext`mean], \
$CellContext`mean}]}]]], $CellContext`pushDownBy[
         Pattern[$CellContext`start, 
          Blank[]], 
         Pattern[$CellContext`p, 
          Blank[]]] := $CellContext`start/
        2^($CellContext`p/100), $CellContext`pushUpBy[
         Pattern[$CellContext`start, 
          Blank[]], 
         Pattern[$CellContext`p, 
          Blank[]]] := 
       100 - 25 
        2^(2 - $CellContext`p/100) + $CellContext`start/
         2^($CellContext`p/100), $CellContext`yesCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, $CellContext`t/$CellContext`i], $CellContext`noCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, (100 - $CellContext`t)/(
          100 - $CellContext`i)], $CellContext`tinyRound[
         Pattern[$CellContext`v, 
          Blank[]]] := Round[$CellContext`v, 
         If[
          And[Abs[$CellContext`v] < 1, $CellContext`v != 0], 0.1, 1]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.615996617988879*^9, {3.616009040318396*^9, 3.6160090656368437`*^9}, 
   3.6160091350348134`*^9, 3.6160091825555315`*^9, {3.616009224876952*^9, 
   3.6160092907397194`*^9}, 3.61601032787104*^9, 3.6160104208773594`*^9, 
   3.61601050848637*^9, {3.616010586753847*^9, 3.6160106084910903`*^9}, 
   3.616012176339766*^9, 3.61601221976225*^9, 3.616012279123645*^9, 
   3.6160124319573865`*^9, 3.616012573947508*^9, 3.616012626724527*^9, 
   3.616013100572629*^9, {3.6160131406329203`*^9, 3.6160131436600933`*^9}, 
   3.6160132637479625`*^9, {3.61601335286506*^9, 3.616013365621789*^9}, 
   3.6160134382659445`*^9, 3.6160136831459503`*^9, 3.616014513893467*^9, 
   3.6160145979952765`*^9, 3.6160146310871696`*^9, 3.6160148955892982`*^9, 
   3.6160185653521967`*^9, 3.616035810835582*^9, 3.6162447563028355`*^9, 
   3.616373538780772*^9, 3.616373612467986*^9, 3.616373724099372*^9, {
   3.6163738745099745`*^9, 3.616373879627267*^9}, 3.6163739350844393`*^9, {
   3.6163740366032457`*^9, 3.6163740523631473`*^9}, {3.61637474056351*^9, 
   3.616374759655602*^9}, {3.616375239346039*^9, 3.6163752766671734`*^9}, 
   3.6163753075309386`*^9, {3.6163753434939957`*^9, 3.6163753492803264`*^9}, 
   3.6163766819405503`*^9, 3.6165430277989893`*^9, {3.6165430707624464`*^9, 
   3.6165430930727224`*^9}, {3.6165927666538887`*^9, 
   3.6165928082612686`*^9}, {3.61659286667661*^9, 3.6165928909609985`*^9}, 
   3.616594002566579*^9, 3.616594051393372*^9}]
}, Open  ]],

Cell["\<\
expectedOutcome [i_,b_,t_,neg_:0,pos_:0] := (b/100)*(pos+yesCost[i,t]) + \
(1-b/100)*(neg+noCost[i,t])\
\>", "Input",
 CellChangeTimes->{
  3.615944513150653*^9, {3.615992439355875*^9, 3.615992472605777*^9}},
 CellID->524],

Cell[CellGroupData[{

Cell["\<\
Manipulate[
Plot[expectedOutcome[start,belief,target],
       {target,0.5,99.5},
       ImageSize->Large,
       ColorFunctionScaling \[Rule] False,
       AxesLabel\[Rule]{\"%\",\"E[Earnings]\"},
       PlotRange->{{0,100},
                   {-200,
                    50+expectedOutcome[start,belief,belief]}},
       ColorFunction \[Rule] Function[{x, y}, If[y > 0, Blue, Orange]],
       GridLines -> {{start,belief},{expectedOutcome[start,belief,belief]}},
       Ticks -> \
{{0,10,25,50,75,90,100,{start,\"S\"},{belief,\"B\"}},Automatic},
       Epilog->{Text[Round[expectedOutcome[start,belief,belief]],
                     {belief,expectedOutcome[start,belief,belief]},
                     {Center,Bottom}]
               }
       ],
  {{start,N[100/3]},0.5,99.5,0.5,Appearance\[Rule]\"Labeled\"},
  {{belief,N[200/3]},0.5,99.5,0.5,Appearance\[Rule]\"Labeled\"},
  SaveDefinitions->True]\
\>", "Input",
 CellChangeTimes->{{3.615983039508235*^9, 3.615983080389573*^9}, {
   3.6159832032436*^9, 3.6159833545552545`*^9}, {3.6159834721849823`*^9, 
   3.6159834722939887`*^9}, {3.615983548324337*^9, 3.6159835572668486`*^9}, {
   3.6159837266905394`*^9, 3.6159837362560863`*^9}, {3.6159838239641027`*^9, 
   3.6159838311615148`*^9}, {3.6159839603599043`*^9, 
   3.6159840386273813`*^9}, {3.6159840696321545`*^9, 3.6159841639345484`*^9}, 
   3.6159842080990744`*^9, {3.6159842813192625`*^9, 3.6159842817512865`*^9}, {
   3.615984630707246*^9, 3.6159846378986573`*^9}, {3.615984948557426*^9, 
   3.615984948883445*^9}, {3.6159924927599297`*^9, 3.615992501098407*^9}, 
   3.6159925474120555`*^9, {3.6160245326065044`*^9, 3.6160245344996123`*^9}, {
   3.616286050422724*^9, 3.616286093831207*^9}, {3.6162861498334103`*^9, 
   3.616286205133573*^9}, {3.616286341066348*^9, 3.6162863717511024`*^9}, {
   3.616288934346675*^9, 3.616288938173894*^9}},
 CellID->525],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`belief$$ = 
    66.66666666666667, $CellContext`start$$ = 33.333333333333336`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`start$$], 33.333333333333336`}, 0.5, 99.5, 0.5}, {{
       Hold[$CellContext`belief$$], 66.66666666666667}, 0.5, 99.5, 0.5}}, 
    Typeset`size$$ = {576., {175., 179.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`start$88410$$ = 0, $CellContext`belief$88411$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`belief$$ = 
        66.66666666666667, $CellContext`start$$ = 33.333333333333336`}, 
      "ControllerVariables" :> {
        Hold[$CellContext`start$$, $CellContext`start$88410$$, 0], 
        Hold[$CellContext`belief$$, $CellContext`belief$88411$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`target], {$CellContext`target, 0.5, 99.5},
         ImageSize -> Large, ColorFunctionScaling -> False, 
        AxesLabel -> {"%", "E[Earnings]"}, 
        PlotRange -> {{0, 
          100}, {-200, 
           50 + $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`belief$$]}}, ColorFunction -> 
        Function[{$CellContext`x, $CellContext`y}, 
          If[$CellContext`y > 0, Blue, Orange]], 
        GridLines -> {{$CellContext`start$$, $CellContext`belief$$}, {
           $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`belief$$]}}, 
        Ticks -> {{
          0, 10, 25, 50, 75, 90, 
           100, {$CellContext`start$$, "S"}, {$CellContext`belief$$, "B"}}, 
          Automatic}, Epilog -> {
          Text[
           Round[
            $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`belief$$]], {$CellContext`belief$$, 
            $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`belief$$]}, {Center, Bottom}]}], 
      "Specifications" :> {{{$CellContext`start$$, 33.333333333333336`}, 0.5, 
         99.5, 0.5, Appearance -> 
         "Labeled"}, {{$CellContext`belief$$, 66.66666666666667}, 0.5, 99.5, 
         0.5, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{627., {234., 241.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`expectedOutcome[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := ($CellContext`b/
          100) $CellContext`yesCost[$CellContext`i, $CellContext`t] + (
          1 - $CellContext`b/
          100) $CellContext`noCost[$CellContext`i, $CellContext`t], \
$CellContext`expectedOutcome[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`neg, 
           Blank[]], 0], 
         Optional[
          Pattern[$CellContext`pos, 
           Blank[]], 0]] := ($CellContext`b/
          100) ($CellContext`pos + $CellContext`yesCost[$CellContext`i, \
$CellContext`t]) + (1 - $CellContext`b/
          100) ($CellContext`neg + $CellContext`noCost[$CellContext`i, \
$CellContext`t]), $CellContext`yesCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, $CellContext`t/$CellContext`i], $CellContext`noCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, (100 - $CellContext`t)/(100 - $CellContext`i)]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6159443255459228`*^9, 3.615945028527131*^9, 3.6159450673493514`*^9, 
   3.61594519548468*^9, 3.615983081160617*^9, {3.6159832781148825`*^9, 
   3.615983288814494*^9}, 3.6159833552572947`*^9, 3.615983472987028*^9, 
   3.6159835578428817`*^9, 3.6159837370061293`*^9, 3.615983832342582*^9, {
   3.615983961821988*^9, 3.615983975261757*^9}, 3.6159840255216312`*^9, {
   3.6159840996178694`*^9, 3.6159841644575777`*^9}, 3.615984209726167*^9, 
   3.6159842824143248`*^9, 3.6159846384506893`*^9, 3.615984959565056*^9, 
   3.6159925022414722`*^9, 3.615992550346224*^9, 3.615994690425629*^9, 
   3.616009040533408*^9, 3.6160125740705147`*^9, 3.616013143714097*^9, 
   3.6160133656847925`*^9, 3.616014514014474*^9, 3.616018565467203*^9, 
   3.6160245379078074`*^9, 3.6160358109515886`*^9, 3.6162447564148417`*^9, {
   3.616286059170224*^9, 3.616286094341236*^9}, {3.616286162729148*^9, 
   3.616286174745835*^9}, 3.616286210083856*^9, {3.6162863507229004`*^9, 
   3.6162863738612237`*^9}, 3.6162889386169195`*^9, 3.616376682055557*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Manipulate[
  Plot[expectedOutcome[start,belief,target]/-cost[start,target],
       {target,0.5,99.5},
       ImageSize->Large,
       AxesLabel\[Rule]{\"%\",\"Expected/Cost\"},
       PlotStyle->Green,
       GridLines -> {{start,belief},{expectedOutcome[start,belief,belief]}},
       Ticks -> \
{{0,10,25,50,75,90,100,{start,\"S\"},{belief,\"B\"}},Automatic},
       PlotRange->{{0,100},{0,Automatic}}],
  {{start,N[100/3]},0.5,99.5,0.5,Appearance\[Rule]\"Labeled\"},
  {{belief,N[200/3]},0.5,99.5,0.5,Appearance\[Rule]\"Labeled\"},
  SaveDefinitions->True]\
\>", "Input",
 CellChangeTimes->{{3.615984432088886*^9, 3.615984463097659*^9}, {
  3.615984534767759*^9, 3.615984600068494*^9}, {3.6159846458221107`*^9, 
  3.615984653013522*^9}, {3.615984683505266*^9, 3.615984696765024*^9}, {
  3.615984937819812*^9, 3.6159849412260065`*^9}, {3.6159857416637893`*^9, 
  3.6159857425418396`*^9}, {3.616286391928257*^9, 3.616286413557494*^9}, {
  3.616286444730277*^9, 3.6162864589690914`*^9}, {3.6163760116582127`*^9, 
  3.6163760180825796`*^9}},
 CellID->591],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`belief$$ = 
    66.66666666666667, $CellContext`start$$ = 33.333333333333336`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`start$$], 33.333333333333336`}, 0.5, 99.5, 0.5}, {{
       Hold[$CellContext`belief$$], 66.66666666666667}, 0.5, 99.5, 0.5}}, 
    Typeset`size$$ = {576., {178., 182.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`start$88469$$ = 0, $CellContext`belief$88470$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`belief$$ = 
        66.66666666666667, $CellContext`start$$ = 33.333333333333336`}, 
      "ControllerVariables" :> {
        Hold[$CellContext`start$$, $CellContext`start$88469$$, 0], 
        Hold[$CellContext`belief$$, $CellContext`belief$88470$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, \
$CellContext`target]/(-$CellContext`cost[$CellContext`start$$, \
$CellContext`target]), {$CellContext`target, 0.5, 99.5}, ImageSize -> Large, 
        AxesLabel -> {"%", "Expected/Cost"}, PlotStyle -> Green, 
        GridLines -> {{$CellContext`start$$, $CellContext`belief$$}, {
           $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`belief$$]}}, 
        Ticks -> {{
          0, 10, 25, 50, 75, 90, 
           100, {$CellContext`start$$, "S"}, {$CellContext`belief$$, "B"}}, 
          Automatic}, PlotRange -> {{0, 100}, {0, Automatic}}], 
      "Specifications" :> {{{$CellContext`start$$, 33.333333333333336`}, 0.5, 
         99.5, 0.5, Appearance -> 
         "Labeled"}, {{$CellContext`belief$$, 66.66666666666667}, 0.5, 99.5, 
         0.5, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{627., {237., 244.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`expectedOutcome[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := ($CellContext`b/
          100) $CellContext`yesCost[$CellContext`i, $CellContext`t] + (
          1 - $CellContext`b/
          100) $CellContext`noCost[$CellContext`i, $CellContext`t], \
$CellContext`expectedOutcome[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`neg, 
           Blank[]], 0], 
         Optional[
          Pattern[$CellContext`pos, 
           Blank[]], 0]] := ($CellContext`b/
          100) ($CellContext`pos + $CellContext`yesCost[$CellContext`i, \
$CellContext`t]) + (1 - $CellContext`b/
          100) ($CellContext`neg + $CellContext`noCost[$CellContext`i, \
$CellContext`t]), $CellContext`yesCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, $CellContext`t/$CellContext`i], $CellContext`noCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, (100 - $CellContext`t)/(
          100 - $CellContext`i)], $CellContext`cost[
         Pattern[$CellContext`start, 
          Blank[]], 
         Pattern[$CellContext`target, 
          Blank[]]] := Min[
         $CellContext`yesCost[$CellContext`start, $CellContext`target], 
         $CellContext`noCost[$CellContext`start, $CellContext`target]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.615944325732933*^9, 3.6159450285661335`*^9, 3.615945067458358*^9, 
   3.6159451955586843`*^9, 3.6159844636776924`*^9, {3.6159845462284145`*^9, 
   3.6159845689047112`*^9}, 3.6159846007275314`*^9, 3.6159846535765543`*^9, {
   3.615984686660446*^9, 3.6159846973430576`*^9}, {3.6159849428591003`*^9, 
   3.6159849623302135`*^9}, 3.615986885157193*^9, 3.6159946904656315`*^9, 
   3.6160090405774107`*^9, 3.616012574225524*^9, 3.6160131438631053`*^9, 
   3.6160133658408017`*^9, 3.616014514165482*^9, 3.616018565616212*^9, 
   3.616035811099597*^9, 3.61624475655485*^9, {3.6162864024118567`*^9, 
   3.6162864141395273`*^9}, 3.616286459801139*^9, {3.616376012734274*^9, 
   3.6163760189196277`*^9}, 3.616376682193565*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Manipulate[
  Grid[{{\"\",
    Plot[expectedOutcome[start,belief,target],
         {target,0.5,99.5},
         ImageSize->Medium,
         ColorFunctionScaling \[Rule] False,
         AxesLabel\[Rule]{\"%\",\"Expected Points\"},
         PlotRange->{{0,100},
                     {-200,
                      50+expectedOutcome[start,belief,belief]}},
         ColorFunction \[Rule] Function[{x, y}, If[y > 0, Blue, Orange]],
         GridLines -> {{start,belief},{expectedOutcome[start,belief,belief]}},
         Ticks -> \
{{0,10,25,50,75,90,100,{start,\"S\"},{belief,\"B\"}},Automatic},
         Epilog->{Text[Round[expectedOutcome[start,belief,belief]],
                       {belief,expectedOutcome[start,belief,belief]},
                       {Center,Bottom}]}
         ]},
    {Plot[cost[start,target],
         {target,0.5,99.5},
         ImageSize->Medium,
         PlotStyle->Orange,
         AxesLabel->{\"%\",\"Cost\"},
         GridLines -> {{start},{}},
         Ticks -> {{0,10,25,50,75,90,100,{start,\"S\"}},Automatic},
         PlotRange->{{0,100},{-500,0}}],
    Plot[expectedOutcome[start,belief,target]/-cost[start,target],
         {target,0.5,99.5},
         ImageSize->Medium,
         PlotStyle->If[start<belief,Green,Red],
         AxesLabel\[Rule]{\"%\",\"Expected/-Cost\"},
         GridLines -> {{start,belief},{}},
         Ticks -> \
{{0,10,25,50,75,90,100,{start,\"S\"},{belief,\"B\"}},Automatic},
         PlotRange->{{0,100},
         {0,1.2*Max[expectedOutcome[start,belief,start-0.5]/-cost[start,start-\
0.5],expectedOutcome[start,belief,start+0.5]/-cost[start,start+0.5]]}}]
  }}],
{{start,N[100/3]},0.5,99.5,0.5,Appearance\[Rule]\"Labeled\"},
{{belief,N[200/3]},0.5,99.5,0.5,Appearance\[Rule]\"Labeled\"},
SaveDefinitions->True]\
\>", "Input",
 CellChangeTimes->{{3.615984827552505*^9, 3.6159849196807747`*^9}, {
   3.6159849719927664`*^9, 3.615985037359505*^9}, {3.6159851460607224`*^9, 
   3.615985147142784*^9}, {3.6159857466700754`*^9, 3.6159857476321306`*^9}, {
   3.616286509360974*^9, 3.6162865455260425`*^9}, {3.616286582868178*^9, 
   3.6162867120215654`*^9}, {3.616286775656205*^9, 3.6162867806244893`*^9}, 
   3.6162868117992725`*^9, {3.616288964776416*^9, 3.6162890111270666`*^9}, {
   3.6163758131898603`*^9, 3.616375813651887*^9}, {3.616376332112541*^9, 
   3.6163764869363966`*^9}, {3.616376520484316*^9, 3.6163766701928787`*^9}, {
   3.6163767040628157`*^9, 3.616376747869321*^9}},
 CellID->594],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`belief$$ = 99.5, $CellContext`start$$ = 8., 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`start$$], 33.333333333333336`}, 0.5, 99.5, 0.5}, {{
       Hold[$CellContext`belief$$], 66.66666666666667}, 0.5, 99.5, 0.5}}, 
    Typeset`size$$ = {729., {218.5, 225.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`start$90935$$ = 0, $CellContext`belief$90936$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`belief$$ = 
        66.66666666666667, $CellContext`start$$ = 33.333333333333336`}, 
      "ControllerVariables" :> {
        Hold[$CellContext`start$$, $CellContext`start$90935$$, 0], 
        Hold[$CellContext`belief$$, $CellContext`belief$90936$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{"", 
          Plot[
           $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`target], {$CellContext`target, 0.5, 99.5},
            ImageSize -> Medium, ColorFunctionScaling -> False, 
           AxesLabel -> {"%", "Expected Points"}, 
           PlotRange -> {{0, 
             100}, {-200, 
              50 + $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`belief$$]}}, ColorFunction -> 
           Function[{$CellContext`x, $CellContext`y}, 
             If[$CellContext`y > 0, Blue, Orange]], 
           GridLines -> {{$CellContext`start$$, $CellContext`belief$$}, {
              $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`belief$$]}}, 
           Ticks -> {{
             0, 10, 25, 50, 75, 90, 
              100, {$CellContext`start$$, "S"}, {$CellContext`belief$$, "B"}},
              Automatic}, Epilog -> {
             Text[
              Round[
               $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`belief$$]], {$CellContext`belief$$, 
               $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`belief$$]}, {Center, Bottom}]}]}, {
          Plot[
           $CellContext`cost[$CellContext`start$$, $CellContext`target], \
{$CellContext`target, 0.5, 99.5}, ImageSize -> Medium, PlotStyle -> Orange, 
           AxesLabel -> {"%", "Cost"}, 
           GridLines -> {{$CellContext`start$$}, {}}, 
           Ticks -> {{
             0, 10, 25, 50, 75, 90, 100, {$CellContext`start$$, "S"}}, 
             Automatic}, PlotRange -> {{0, 100}, {-500, 0}}], 
          
          Plot[$CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, \
$CellContext`target]/(-$CellContext`cost[$CellContext`start$$, \
$CellContext`target]), {$CellContext`target, 0.5, 99.5}, ImageSize -> Medium, 
           PlotStyle -> 
           If[$CellContext`start$$ < $CellContext`belief$$, Green, Red], 
           AxesLabel -> {"%", "Expected/-Cost"}, 
           GridLines -> {{$CellContext`start$$, $CellContext`belief$$}, {}}, 
           Ticks -> {{
             0, 10, 25, 50, 75, 90, 
              100, {$CellContext`start$$, "S"}, {$CellContext`belief$$, "B"}},
              Automatic}, 
           PlotRange -> {{0, 100}, {
             0, 1.2 Max[$CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`start$$ - 
                  0.5]/(-$CellContext`cost[$CellContext`start$$, \
$CellContext`start$$ - 
                  0.5]), $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`start$$ + 
                  0.5]/(-$CellContext`cost[$CellContext`start$$, \
$CellContext`start$$ + 0.5])]}}]}}], 
      "Specifications" :> {{{$CellContext`start$$, 33.333333333333336`}, 0.5, 
         99.5, 0.5, Appearance -> 
         "Labeled"}, {{$CellContext`belief$$, 66.66666666666667}, 0.5, 99.5, 
         0.5, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{780., {280., 287.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`expectedOutcome[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := ($CellContext`b/
          100) $CellContext`yesCost[$CellContext`i, $CellContext`t] + (
          1 - $CellContext`b/
          100) $CellContext`noCost[$CellContext`i, $CellContext`t], \
$CellContext`expectedOutcome[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`neg, 
           Blank[]], 0], 
         Optional[
          Pattern[$CellContext`pos, 
           Blank[]], 0]] := ($CellContext`b/
          100) ($CellContext`pos + $CellContext`yesCost[$CellContext`i, \
$CellContext`t]) + (1 - $CellContext`b/
          100) ($CellContext`neg + $CellContext`noCost[$CellContext`i, \
$CellContext`t]), $CellContext`yesCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, $CellContext`t/$CellContext`i], $CellContext`noCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, (100 - $CellContext`t)/(
          100 - $CellContext`i)], $CellContext`cost[
         Pattern[$CellContext`start, 
          Blank[]], 
         Pattern[$CellContext`target, 
          Blank[]]] := Min[
         $CellContext`yesCost[$CellContext`start, $CellContext`target], 
         $CellContext`noCost[$CellContext`start, $CellContext`target]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6163767124872975`*^9, 3.616376748831376*^9}}]
}, Open  ]],

Cell["\<\
odds[initial_,target_]:=
  With[{gain=100*Log[2,target/initial],
        loss=100*Log[2,(100-target)/(100-initial)]},
       If[gain>0>loss,
          (gain)/(-loss),
          Undefined]]\
\>", "Input",
 CellChangeTimes->{
  3.615985645356281*^9, {3.615985974569111*^9, 3.6159859755921693`*^9}, {
   3.615986013843357*^9, 3.6159860649872823`*^9}, {3.6160185593148513`*^9, 
   3.616018583741248*^9}, {3.6160186162661085`*^9, 3.6160186173451705`*^9}},
 CellID->611],

Cell[CellGroupData[{

Cell["\<\
Manipulate[
  Plot[{1+odds[start,target],
        1+odds[100-start,100-target]},
       {target,0.5,99.5},
       PlotStyle\[Rule]{Green,Red},
       ImageSize\[Rule]Large,
       AxesLabel->{\"%\",Hyperlink[\"Decimal \
Odds\",\"http://en.wikipedia.org/wiki/Odds#Decimal_odds\"]},
       GridLines -> {{start},{2}},
       Ticks -> {{0,10,25,50,75,90,100,{start,\"S\"}},Automatic},
       PlotRange->{{0,100},{1,Automatic}}],
  {{start,50},0.5,99.5,0.5,Appearance\[Rule]\"Labeled\"}]\
\>", "Input",
 CellChangeTimes->{{3.6159850898125057`*^9, 3.615985195962577*^9}, {
   3.615985288622877*^9, 3.615985301564617*^9}, 3.6159853606589966`*^9, {
   3.6159856473083925`*^9, 3.615985647637411*^9}, 3.6159856852155604`*^9, 
   3.6159857520863853`*^9, {3.615986270637045*^9, 3.615986289530125*^9}, {
   3.6159863241171036`*^9, 3.6159863251801643`*^9}, {3.616289171069215*^9, 
   3.6162891715872445`*^9}, {3.6163759169197936`*^9, 3.6163759245922327`*^9}},
 CellID->612],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`start$$ = 50, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`start$$], 50}, 0.5, 99.5, 0.5}}, Typeset`size$$ = {
    576., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`start$88526$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`start$$ = 50}, 
      "ControllerVariables" :> {
        Hold[$CellContext`start$$, $CellContext`start$88526$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{1 + $CellContext`odds[$CellContext`start$$, $CellContext`target], 
         1 + $CellContext`odds[
          100 - $CellContext`start$$, 
           100 - $CellContext`target]}, {$CellContext`target, 0.5, 99.5}, 
        PlotStyle -> {Green, Red}, ImageSize -> Large, AxesLabel -> {"%", 
          Hyperlink[
          "Decimal Odds", "http://en.wikipedia.org/wiki/Odds#Decimal_odds"]}, 
        GridLines -> {{$CellContext`start$$}, {2}}, 
        Ticks -> {{0, 10, 25, 50, 75, 90, 100, {$CellContext`start$$, "S"}}, 
          Automatic}, PlotRange -> {{0, 100}, {1, Automatic}}], 
      "Specifications" :> {{{$CellContext`start$$, 50}, 0.5, 99.5, 0.5, 
         Appearance -> "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{627., {223., 230.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.61594432602195*^9, 3.615945028816148*^9, 3.6159450676333675`*^9, 
   3.615945195815699*^9, 3.615985129262762*^9, 3.615985198010694*^9, {
   3.6159852943842063`*^9, 3.6159853022706575`*^9}, 3.6159853619950733`*^9, {
   3.6159856480864367`*^9, 3.615985686338625*^9}, 3.615985755612587*^9, 
   3.615985984324669*^9, {3.6159860328194427`*^9, 3.6159860362776403`*^9}, 
   3.6159860711516347`*^9, {3.6159862763443713`*^9, 3.6159862906221876`*^9}, 
   3.615986325484182*^9, 3.6159946908016505`*^9, 3.6160090409284306`*^9, 
   3.616012574597545*^9, 3.616013144227126*^9, 3.616013366198822*^9, 
   3.6160145145305033`*^9, {3.6160185659712324`*^9, 3.6160185868764277`*^9}, 
   3.6160358114556174`*^9, 3.6162447571408834`*^9, 3.616289173811372*^9, 
   3.6163759254772835`*^9, 3.6163766824555798`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", "  ", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"expectedOutcome", "[", 
         RowBox[{"start", ",", "belief", ",", "target"}], "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"odds", "[", 
           RowBox[{"start", ",", "target"}], "]"}]}], ")"}]}], ",", "\n", 
       "        ", 
       RowBox[{
        RowBox[{"expectedOutcome", "[", 
         RowBox[{"start", ",", "belief", ",", "target"}], "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"odds", "[", 
           RowBox[{
            RowBox[{"100", "-", "start"}], ",", 
            RowBox[{"100", "-", "target"}]}], "]"}]}], ")"}]}]}], "}"}], ",", 
     "\n", "       ", 
     RowBox[{"{", 
      RowBox[{"target", ",", "0.5", ",", "99.5"}], "}"}], ",", "\n", 
     "       ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Red"}], "}"}]}], ",", "\n", "       ", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\n", "       ", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<%\>\"", ",", "\"\<Expected*Odds\>\""}], "}"}]}], ",", 
     "\n", "       ", 
     RowBox[{"GridLines", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"start", ",", "belief"}], "}"}], ",", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"start", "<", "belief"}], ",", "\[IndentingNewLine]", 
           RowBox[{"First", "[", 
            RowBox[{"NMaximize", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"expectedOutcome", "[", 
                  RowBox[{"start", ",", "belief", ",", "target"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"odds", "[", 
                    RowBox[{"start", ",", "target"}], "]"}]}], ")"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"start", "<", "target", "<", "belief"}]}], "}"}], ",",
               "target"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"First", "[", 
            RowBox[{"NMaximize", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"expectedOutcome", "[", 
                  RowBox[{"start", ",", "belief", ",", "target"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"odds", "[", 
                    RowBox[{
                    RowBox[{"100", "-", "start"}], ",", 
                    RowBox[{"100", "-", "target"}]}], "]"}]}], ")"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"belief", "<", "target", "<", "start"}]}], "}"}], ",",
               "target"}], "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
         "}"}]}], "}"}]}], ",", "\n", "       ", 
     RowBox[{"Ticks", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", "10", ",", "25", ",", "50", ",", "75", ",", "90", ",", 
          "100", ",", 
          RowBox[{"{", 
           RowBox[{"start", ",", "\"\<S\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"belief", ",", "\"\<B\>\""}], "}"}]}], "}"}], ",", 
        "Automatic"}], "}"}]}], ",", "\n", "       ", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   "\n", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"start", ",", 
       RowBox[{"N", "[", 
        RowBox[{"100", "/", "3"}], "]"}]}], "}"}], ",", "0.5", ",", "99.5", 
     ",", "0.5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"belief", ",", 
       RowBox[{"N", "[", 
        RowBox[{"200", "/", "3"}], "]"}]}], "}"}], ",", "0.5", ",", "99.5", 
     ",", "0.5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6159863838075175`*^9, 3.61598647738087*^9}, {
  3.615986720287763*^9, 3.6159867511805305`*^9}, {3.615986834330286*^9, 
  3.6159868417277093`*^9}, {3.616017854143518*^9, 3.616017857575714*^9}, {
  3.616017893800786*^9, 3.6160179729333124`*^9}, {3.616280828096024*^9, 
  3.616280864139086*^9}, {3.6162808949828496`*^9, 3.6162809174671354`*^9}, {
  3.616289162049699*^9, 3.6162891652638826`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`belief$$ = 
    66.66666666666667, $CellContext`start$$ = 33.333333333333336`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`start$$], 33.333333333333336`}, 0.5, 99.5, 0.5}, {{
       Hold[$CellContext`belief$$], 66.66666666666667}, 0.5, 99.5, 0.5}}, 
    Typeset`size$$ = {576., {177., 182.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`start$88581$$ = 0, $CellContext`belief$88582$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`belief$$ = 
        66.66666666666667, $CellContext`start$$ = 33.333333333333336`}, 
      "ControllerVariables" :> {
        Hold[$CellContext`start$$, $CellContext`start$88581$$, 0], 
        Hold[$CellContext`belief$$, $CellContext`belief$88582$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`target] (
          1 + $CellContext`odds[$CellContext`start$$, $CellContext`target]), \
$CellContext`expectedOutcome[$CellContext`start$$, $CellContext`belief$$, \
$CellContext`target] (
          1 + $CellContext`odds[
           100 - $CellContext`start$$, 
            100 - $CellContext`target])}, {$CellContext`target, 0.5, 99.5}, 
        PlotStyle -> {Green, Red}, ImageSize -> Large, 
        AxesLabel -> {"%", "Expected*Odds"}, 
        GridLines -> {{$CellContext`start$$, $CellContext`belief$$}, {
           If[$CellContext`start$$ < $CellContext`belief$$, 
            First[
             
             NMaximize[{$CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`target] (
                1 + $CellContext`odds[$CellContext`start$$, \
$CellContext`target]), $CellContext`start$$ < $CellContext`target < \
$CellContext`belief$$}, $CellContext`target]], 
            First[
             
             NMaximize[{$CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`target] (
                1 + $CellContext`odds[
                 100 - $CellContext`start$$, 
                  100 - $CellContext`target]), $CellContext`belief$$ < \
$CellContext`target < $CellContext`start$$}, $CellContext`target]]]}}, 
        Ticks -> {{
          0, 10, 25, 50, 75, 90, 
           100, {$CellContext`start$$, "S"}, {$CellContext`belief$$, "B"}}, 
          Automatic}, PlotRange -> {{0, 100}, {0, Automatic}}], 
      "Specifications" :> {{{$CellContext`start$$, 33.333333333333336`}, 0.5, 
         99.5, 0.5, Appearance -> 
         "Labeled"}, {{$CellContext`belief$$, 66.66666666666667}, 0.5, 99.5, 
         0.5, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{627., {237., 244.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`expectedOutcome[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := ($CellContext`b/
          100) $CellContext`yesCost[$CellContext`i, $CellContext`t] + (
          1 - $CellContext`b/
          100) $CellContext`noCost[$CellContext`i, $CellContext`t], \
$CellContext`expectedOutcome[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`neg, 
           Blank[]], 0], 
         Optional[
          Pattern[$CellContext`pos, 
           Blank[]], 0]] := ($CellContext`b/
          
          100) ($CellContext`pos + $CellContext`yesCost[$CellContext`i, \
$CellContext`t]) + (1 - $CellContext`b/
          100) ($CellContext`neg + $CellContext`noCost[$CellContext`i, \
$CellContext`t]), $CellContext`yesCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, $CellContext`t/$CellContext`i], $CellContext`noCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, (100 - $CellContext`t)/(
          100 - $CellContext`i)], $CellContext`odds[
         Pattern[$CellContext`initial, 
          Blank[]], 
         Pattern[$CellContext`target, 
          Blank[]]] := 
       With[{$CellContext`gain = 
          100 Log[2, $CellContext`target/$CellContext`initial], \
$CellContext`loss = 
          100 Log[2, (100 - $CellContext`target)/(
             100 - $CellContext`initial)]}, 
         If[$CellContext`gain > 
          0 > $CellContext`loss, $CellContext`gain/(-$CellContext`loss), 
          Undefined]]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6159864146162796`*^9, 3.615986439046677*^9}, {
   3.6159864727776065`*^9, 3.6159864781969166`*^9}, 3.615986754709732*^9, {
   3.615986831168105*^9, 3.6159868434838095`*^9}, 3.6159946909376583`*^9, 
   3.6160090411984463`*^9, 3.6160125749015627`*^9, 3.616013144526143*^9, 
   3.6160133665058393`*^9, 3.616014514849521*^9, {3.6160179161720657`*^9, 
   3.616017933120035*^9}, 3.616017973388338*^9, 3.6160185662892504`*^9, 
   3.6160358117756357`*^9, 3.6162446428343453`*^9, 3.616244757268891*^9, 
   3.61628086666323*^9, 3.616280918703206*^9, 3.616289178900663*^9, 
   3.616376682498582*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", "  ", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"100", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"odds", "[", 
           RowBox[{"start", ",", "target"}], "]"}]}], ")"}]}], ",", "\n", 
       "       ", 
       RowBox[{"100", "/", 
        RowBox[{"(", " ", 
         RowBox[{"1", "+", 
          RowBox[{"odds", "[", 
           RowBox[{
            RowBox[{"100", "-", "start"}], ",", 
            RowBox[{"100", "-", "target"}]}], "]"}]}], ")"}]}]}], "}"}], ",", 
     "\n", "       ", 
     RowBox[{"{", 
      RowBox[{"target", ",", "0.5", ",", "99.5"}], "}"}], ",", "\n", 
     "       ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Red"}], "}"}]}], ",", "\n", "       ", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\n", "       ", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<%\>\"", ",", "\"\<Win %\>\""}], "}"}]}], ",", "\n", 
     "       ", 
     RowBox[{"GridLines", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"start", ",", "tradeto"}], "}"}], ",", "\[IndentingNewLine]",
         "                             ", 
        RowBox[{"{", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"start", "<", "tradeto"}], ",", "\[IndentingNewLine]", 
           "                                 ", 
           RowBox[{"100", "/", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"odds", "[", 
               RowBox[{"start", ",", "tradeto"}], "]"}]}], ")"}]}], ",", 
           "\[IndentingNewLine]", "                                 ", 
           RowBox[{"100", "/", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"odds", "[", 
               RowBox[{
                RowBox[{"100", "-", "start"}], ",", 
                RowBox[{"100", "-", "tradeto"}]}], "]"}]}], ")"}]}]}], "]"}], 
         "}"}]}], "}"}]}], ",", "\n", "       ", 
     RowBox[{"Ticks", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", "10", ",", "25", ",", "50", ",", "75", ",", "90", ",", 
          "100", ",", 
          RowBox[{"{", 
           RowBox[{"start", ",", "\"\<S\>\""}], "}"}]}], "}"}], ",", 
        "Automatic"}], "}"}]}], ",", "\n", "       ", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "100"}], "}"}]}], "}"}]}]}], "]"}], ",", "\n", 
   "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"start", ",", 
       RowBox[{"N", "[", "25", "]"}]}], "}"}], ",", "0.5", ",", "99.5", ",", 
     "0.5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tradeto", ",", 
       RowBox[{"N", "[", "75", "]"}]}], "}"}], ",", "0.5", ",", "99.5", ",", 
     "0.5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6159871111471195`*^9, 3.6159871601929245`*^9}, {
  3.61598719088468*^9, 3.615987226646725*^9}, {3.6159875469480457`*^9, 
  3.6159875472760644`*^9}, {3.615987580644973*^9, 3.615987747929541*^9}, {
  3.6159878068299103`*^9, 3.615987809540065*^9}, {3.6159878916187596`*^9, 
  3.615987903565443*^9}, {3.615987955217397*^9, 3.6159879579185514`*^9}, {
  3.6162891491599617`*^9, 3.6162891514290915`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`start$$ = 25., $CellContext`tradeto$$ = 75.,
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`start$$], 25.}, 0.5, 99.5, 0.5}, {{
       Hold[$CellContext`tradeto$$], 75.}, 0.5, 99.5, 0.5}}, 
    Typeset`size$$ = {576., {182., 186.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`start$88809$$ = 0, $CellContext`tradeto$88810$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`start$$ = 25., $CellContext`tradeto$$ = 
        75.}, "ControllerVariables" :> {
        Hold[$CellContext`start$$, $CellContext`start$88809$$, 0], 
        Hold[$CellContext`tradeto$$, $CellContext`tradeto$88810$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{100/(
         1 + $CellContext`odds[$CellContext`start$$, $CellContext`target]), 
         100/(1 + $CellContext`odds[
          100 - $CellContext`start$$, 
           100 - $CellContext`target])}, {$CellContext`target, 0.5, 99.5}, 
        PlotStyle -> {Green, Red}, ImageSize -> Large, 
        AxesLabel -> {"%", "Win %"}, 
        GridLines -> {{$CellContext`start$$, $CellContext`tradeto$$}, {
           
           If[$CellContext`start$$ < $CellContext`tradeto$$, 100/(
            1 + $CellContext`odds[$CellContext`start$$, \
$CellContext`tradeto$$]), 100/(
            1 + $CellContext`odds[
             100 - $CellContext`start$$, 100 - $CellContext`tradeto$$])]}}, 
        Ticks -> {{0, 10, 25, 50, 75, 90, 100, {$CellContext`start$$, "S"}}, 
          Automatic}, PlotRange -> {{0, 100}, {0, 100}}], 
      "Specifications" :> {{{$CellContext`start$$, 25.}, 0.5, 99.5, 0.5, 
         Appearance -> "Labeled"}, {{$CellContext`tradeto$$, 75.}, 0.5, 99.5, 
         0.5, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{627., {241., 248.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.616035812533679*^9, 3.61624475794693*^9, 
  3.616289156158362*^9, 3.6163766831406193`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"kellyFraction", "[", 
   RowBox[{"odds_", ",", "win_", ",", "lose_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"odds", "*", 
      RowBox[{"win", "/", "100"}]}], "-", 
     RowBox[{"lose", "/", "100"}]}], ")"}], "/", "odds"}]}]], "Input",
 CellChangeTimes->{{3.616034426359394*^9, 3.616034477439316*^9}, {
  3.6162750566419153`*^9, 3.6162750576009703`*^9}}],

Cell["\<\
Not really sure how to apply Kelly, since the odds we\[CloseCurlyQuote]re \
given change with our investment.
The dotted lines correspond to the amounts we can pay; solid lines to the \
amount Kelly says
we should invest at the corresponding odds (given our bankroll). Everywhere \
the dotted line
is below its corresponding solid line is \
\>", "Text",
 CellChangeTimes->{{3.616037345131339*^9, 3.6160373756480837`*^9}, {
  3.6160375955256605`*^9, 3.6160376672117605`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", "  ", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"bankroll", "*", 
        RowBox[{"kellyFraction", "[", 
         RowBox[{
          RowBox[{"odds", "[", 
           RowBox[{"start", ",", "target"}], "]"}], ",", "belief", ",", 
          RowBox[{"(", 
           RowBox[{"100", "-", "belief"}], ")"}]}], "]"}]}], ",", "\n", 
       "               ", 
       RowBox[{"bankroll", "*", 
        RowBox[{"kellyFraction", "[", 
         RowBox[{
          RowBox[{"odds", "[", 
           RowBox[{
            RowBox[{"100", "-", "start"}], ",", 
            RowBox[{"100", "-", "target"}]}], "]"}], ",", 
          RowBox[{"(", 
           RowBox[{"100", "-", "belief"}], ")"}], ",", "belief"}], "]"}]}], 
       ",", "\[IndentingNewLine]", "        ", 
       RowBox[{"-", 
        RowBox[{"noCost", "[", 
         RowBox[{"start", ",", "target"}], "]"}]}], ",", 
       "\[IndentingNewLine]", "        ", 
       RowBox[{"-", 
        RowBox[{"yesCost", "[", 
         RowBox[{"start", ",", "target"}], "]"}]}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\n", "       ", 
     RowBox[{"{", 
      RowBox[{"target", ",", "0.5", ",", "99.5"}], "}"}], ",", "\n", 
     "       ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Red", ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Green"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red"}], "}"}]}], "}"}]}], ",", "\n", 
     "       ", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\n", "       ", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<%\>\"", ",", "\"\<Kelly Bet\>\""}], "}"}]}], ",", "\n", 
     "       ", 
     RowBox[{"GridLines", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"start", ",", "belief"}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", "\n", "       ", 
     RowBox[{"Ticks", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", "10", ",", "25", ",", "50", ",", "75", ",", "90", ",", 
          "100", ",", 
          RowBox[{"{", 
           RowBox[{"start", ",", "\"\<S\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"belief", ",", "\"\<B\>\""}], "}"}]}], "}"}], ",", 
        "Automatic"}], "}"}]}], ",", "\n", "       ", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "bankroll"}], "}"}]}], "}"}]}]}], "]"}], ",", "\n",
    "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"start", ",", 
       RowBox[{"N", "[", 
        RowBox[{"100", "/", "3"}], "]"}]}], "}"}], ",", "0.5", ",", "99.5", 
     ",", "0.5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"belief", ",", 
       RowBox[{"N", "[", 
        RowBox[{"200", "/", "3"}], "]"}]}], "}"}], ",", "0.5", ",", "99.5", 
     ",", "0.5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bankroll", ",", "100"}], "}"}], ",", "10", ",", "1000", ",", 
     "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.616034360522629*^9, 3.6160344178469076`*^9}, {
  3.6160344832366476`*^9, 3.6160345872765985`*^9}, {3.6160346473490343`*^9, 
  3.6160346539244103`*^9}, {3.6160347402943506`*^9, 3.616035051470149*^9}, {
  3.6160350919074616`*^9, 3.616035105986267*^9}, {3.616035140357233*^9, 
  3.616035140449238*^9}, {3.6160354754423985`*^9, 3.616035486439028*^9}, {
  3.6160359780421457`*^9, 3.61603614124148*^9}, {3.6160362551179934`*^9, 
  3.6160363031997433`*^9}, {3.6160364316620913`*^9, 3.6160364652510123`*^9}, {
  3.616037533081089*^9, 3.6160375487569857`*^9}, {3.616275060582141*^9, 
  3.616275068348585*^9}, {3.6162891261886477`*^9, 3.616289131033925*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bankroll$$ = 100, $CellContext`belief$$ = 
    66.66666666666667, $CellContext`start$$ = 33.333333333333336`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`start$$], 33.333333333333336`}, 0.5, 99.5, 0.5}, {{
       Hold[$CellContext`belief$$], 66.66666666666667}, 0.5, 99.5, 0.5}, {{
       Hold[$CellContext`bankroll$$], 100}, 10, 1000, 1}}, Typeset`size$$ = {
    576., {182., 186.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`start$88867$$ = 
    0, $CellContext`belief$88868$$ = 0, $CellContext`bankroll$88869$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bankroll$$ = 100, $CellContext`belief$$ = 
        66.66666666666667, $CellContext`start$$ = 33.333333333333336`}, 
      "ControllerVariables" :> {
        Hold[$CellContext`start$$, $CellContext`start$88867$$, 0], 
        Hold[$CellContext`belief$$, $CellContext`belief$88868$$, 0], 
        Hold[$CellContext`bankroll$$, $CellContext`bankroll$88869$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`bankroll$$ $CellContext`kellyFraction[
           $CellContext`odds[$CellContext`start$$, $CellContext`target], \
$CellContext`belief$$, 
           100 - $CellContext`belief$$], $CellContext`bankroll$$ \
$CellContext`kellyFraction[
           $CellContext`odds[
           100 - $CellContext`start$$, 100 - $CellContext`target], 
           100 - $CellContext`belief$$, $CellContext`belief$$], \
-$CellContext`noCost[$CellContext`start$$, $CellContext`target], \
-$CellContext`yesCost[$CellContext`start$$, $CellContext`target]}, \
{$CellContext`target, 0.5, 99.5}, 
        PlotStyle -> {Green, Red, {Dashed, Green}, {Dashed, Red}}, ImageSize -> 
        Large, AxesLabel -> {"%", "Kelly Bet"}, 
        GridLines -> {{$CellContext`start$$, $CellContext`belief$$}, {}}, 
        Ticks -> {{
          0, 10, 25, 50, 75, 90, 
           100, {$CellContext`start$$, "S"}, {$CellContext`belief$$, "B"}}, 
          Automatic}, PlotRange -> {{0, 100}, {0, $CellContext`bankroll$$}}], 
      "Specifications" :> {{{$CellContext`start$$, 33.333333333333336`}, 0.5, 
         99.5, 0.5, Appearance -> 
         "Labeled"}, {{$CellContext`belief$$, 66.66666666666667}, 0.5, 99.5, 
         0.5, Appearance -> "Labeled"}, {{$CellContext`bankroll$$, 100}, 10, 
         1000, 1, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{627., {254., 261.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.616035052766223*^9, {3.616035092939521*^9, 3.6160351068923187`*^9}, 
   3.6160351409752684`*^9, 3.6160354894472*^9, 3.6160358125906825`*^9, 
   3.6160359942950754`*^9, {3.6160360714424877`*^9, 3.6160361415594983`*^9}, {
   3.6160362611413383`*^9, 3.6160363035567636`*^9}, {3.6160364342192373`*^9, 
   3.6160364657780423`*^9}, {3.6160375377923584`*^9, 3.616037549669038*^9}, 
   3.616244758198944*^9, 3.6162750690046225`*^9, 3.6162891321079865`*^9, 
   3.6163766832956276`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Performs? Kelly by finding the trade that maximizes log utility.", 
  "Section"],
 "\nAppears stable. If you adjust the fields (start, yesAssets, and noAssets) \
according to the computed results, it doesn\[CloseCurlyQuote]t suggest \
further trading.\nStart moving start at that point to reflect someone else\
\[CloseCurlyQuote]s trade, and it changes again."
}], "Text",
 CellChangeTimes->{{3.6165423684002733`*^9, 3.6165425106624107`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tradeto", "=", 
       RowBox[{"tradeto", "/.", 
        RowBox[{"Last", "[", 
         RowBox[{"NMaximize", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"yesCost", "[", 
                   RowBox[{"start", ",", "tradeto"}], "]"}], "+", "bankroll", 
                  "+", "yesAssets"}], ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{
                  RowBox[{"noCost", "[", 
                   RowBox[{"start", ",", "tradeto"}], "]"}], "+", "bankroll", 
                  "+", "noAssets"}], ">", "0"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"belief", "/", "100"}], ")"}], "*", 
                 RowBox[{"Log", "[", 
                  RowBox[{
                   RowBox[{"yesCost", "[", 
                    RowBox[{"start", ",", "tradeto"}], "]"}], "+", "bankroll",
                    "+", "yesAssets"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"(", 
                    RowBox[{"belief", "/", "100"}], ")"}]}], ")"}], "*", 
                 RowBox[{"Log", "[", 
                  RowBox[{
                   RowBox[{"noCost", "[", 
                    RowBox[{"start", ",", "tradeto"}], "]"}], "+", "bankroll",
                    "+", "noAssets"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"10", "^", "1000"}], ")"}]}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{"1", "\[LessEqual]", "tradeto", "<", "99"}], ")"}]}], 
            "\[IndentingNewLine]", "}"}], ",", "tradeto"}], "]"}], "]"}]}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Column", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Grid", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Trade to:\>\"", ",", 
             RowBox[{"StringJoin", "[", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"Round", "[", "tradeto", "]"}], "]"}], ",", 
               "\"\<%\>\""}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<New Assets\>\"", ",", "\"\<\>\"", ",", 
             "\"\<Final Assets\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"tinyRound", "[", 
              RowBox[{"yesCost", "[", 
               RowBox[{"start", ",", 
                RowBox[{"Round", "[", "tradeto", "]"}]}], "]"}], "]"}], ",", 
             "\[IndentingNewLine]", "\"\<Yes\>\"", ",", 
             RowBox[{"tinyRound", "[", 
              RowBox[{
               RowBox[{"yesCost", "[", 
                RowBox[{"start", ",", 
                 RowBox[{"Round", "[", "tradeto", "]"}]}], "]"}], "+", 
               "yesAssets"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"tinyRound", "[", 
              RowBox[{"noCost", "[", 
               RowBox[{"start", ",", 
                RowBox[{"Round", "[", "tradeto", "]"}]}], "]"}], "]"}], ",", 
             "\[IndentingNewLine]", "\"\<No\>\"", ",", 
             RowBox[{"tinyRound", "[", 
              RowBox[{
               RowBox[{"noCost", "[", 
                RowBox[{"start", ",", 
                 RowBox[{"Round", "[", "tradeto", "]"}]}], "]"}], "+", 
               "noAssets"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"expectedOutcome", "[", 
           RowBox[{
           "start", ",", "belief", ",", "target", ",", "noAssets", ",", 
            "yesAssets"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"target", ",", "0.5", ",", "99.5"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<%\>\"", ",", "\"\<E[Earnings after trade]\>\""}], 
            "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "100"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "100"}], ",", 
               RowBox[{"50", "+", 
                RowBox[{"expectedOutcome", "[", 
                 RowBox[{
                 "start", ",", "belief", ",", "belief", ",", "noAssets", ",", 
                  "yesAssets"}], "]"}]}]}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ColorFunction", "\[Rule]", 
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"y", ">", "0"}], ",", "Blue", ",", "Orange"}], "]"}]}],
             "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"GridLines", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"start", ",", "belief", ",", "tradeto"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"expectedOutcome", "[", 
               RowBox[{
               "start", ",", "belief", ",", "belief", ",", "noAssets", ",", 
                "yesAssets"}], "]"}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Ticks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "0", ",", "10", ",", "25", ",", "50", ",", "75", ",", "90", ",",
                "100", ",", 
               RowBox[{"{", 
                RowBox[{"start", ",", "\"\<S\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"tradeto", ",", "\"\<T\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"belief", ",", "\"\<B\>\""}], "}"}]}], "}"}], ",", 
             "Automatic"}], "}"}]}], ",", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Round", "[", 
                RowBox[{"expectedOutcome", "[", 
                 RowBox[{
                 "start", ",", "belief", ",", "belief", ",", "noAssets", ",", 
                  "yesAssets"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
               "                         ", 
               RowBox[{"{", 
                RowBox[{"belief", ",", 
                 RowBox[{"expectedOutcome", "[", 
                  RowBox[{
                  "start", ",", "belief", ",", "belief", ",", "noAssets", ",",
                    "yesAssets"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]",
                "                         ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"belief", "<", "tradeto"}], ",", "Right", ",", 
                   "Left"}], "]"}], ",", "Bottom"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "                ", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Round", "[", 
                RowBox[{"expectedOutcome", "[", 
                 RowBox[{
                 "start", ",", "belief", ",", "tradeto", ",", "noAssets", ",",
                   "yesAssets"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
               "                         ", 
               RowBox[{"{", 
                RowBox[{"tradeto", ",", 
                 RowBox[{"expectedOutcome", "[", 
                  RowBox[{
                  "start", ",", "belief", ",", "tradeto", ",", "noAssets", 
                   ",", "yesAssets"}], "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", "                         ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"belief", "<", "tradeto"}], ",", "Left", ",", 
                   "Right"}], "]"}], ",", "Bottom"}], "}"}]}], "]"}]}], 
            "}"}]}]}], "]"}]}], "}"}], "]"}]}], "]"}], ",", "\n", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"start", ",", "40"}], "}"}], ",", "0.5", ",", "99.5", ",", 
     "0.5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", "\n",
    "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"belief", ",", "60"}], "}"}], ",", "0.5", ",", "99.5", ",", 
     "0.5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bankroll", ",", "500"}], "}"}], ",", "10", ",", "1000", ",", 
     "5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\"\<Assets you already have\>\"", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"yesAssets", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "500"}], ",", "500", ",", "5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"noAssets", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "500"}], ",", "500", ",", "5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", "\n", 
   RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6165383919588346`*^9, 3.616538432401148*^9}, {
   3.6165384747505693`*^9, 3.616538556111223*^9}, {3.616538684941592*^9, 
   3.616538704857731*^9}, {3.6165388744494314`*^9, 3.6165389791094174`*^9}, {
   3.616539009838175*^9, 3.6165390278462048`*^9}, {3.6165393861727*^9, 
   3.616539398473404*^9}, {3.616539432044324*^9, 3.616539451781453*^9}, {
   3.61653948180617*^9, 3.6165395283728333`*^9}, 3.61653959283052*^9, {
   3.6165396483986983`*^9, 3.6165396703229523`*^9}, {3.6165397092461786`*^9, 
   3.6165397234719925`*^9}, {3.616539780161235*^9, 3.616539793176979*^9}, {
   3.616539974403345*^9, 3.616539998875745*^9}, {3.6165400812214546`*^9, 
   3.616540083803602*^9}, {3.6165402234675903`*^9, 3.6165402668920746`*^9}, {
   3.6165403294186506`*^9, 3.6165403299576817`*^9}, {3.616540493490035*^9, 
   3.6165405200375533`*^9}, {3.6165405787619123`*^9, 
   3.6165405796689644`*^9}, {3.616540627782716*^9, 3.6165406942285166`*^9}, {
   3.6165407450294223`*^9, 3.616540911184926*^9}, {3.6165410330398955`*^9, 
   3.6165410598094263`*^9}, {3.6165411004387503`*^9, 3.616541151765686*^9}, {
   3.616541873846987*^9, 3.6165419233368177`*^9}, {3.6165423994810514`*^9, 
   3.616542401443164*^9}, {3.616542676314885*^9, 3.616542758324576*^9}, {
   3.6165947425729055`*^9, 3.6165948006082244`*^9}, {3.6165948746654606`*^9, 
   3.6165949168338723`*^9}, {3.616594962924508*^9, 3.6165950580169477`*^9}, {
   3.6165951034315453`*^9, 3.6165952145819025`*^9}, {3.6165952531121063`*^9, 
   3.616595262493643*^9}, {3.6165953196239104`*^9, 3.616595438361702*^9}, {
   3.616595520527402*^9, 3.6165955227145267`*^9}, {3.616595577044634*^9, 
   3.616595590691415*^9}, {3.61659568012453*^9, 3.6165957148735175`*^9}, {
   3.616596003878048*^9, 3.616596105585865*^9}, {3.6165961389637737`*^9, 
   3.6165961647182474`*^9}, {3.6165962026934195`*^9, 3.616596214513095*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bankroll$$ = 388, $CellContext`belief$$ = 
    63.1, $CellContext`noAssets$$ = -36, $CellContext`start$$ = 
    63.5, $CellContext`yesAssets$$ = 26, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`start$$], 40}, 0.5, 99.5, 0.5}, {{
       Hold[$CellContext`belief$$], 60}, 0.5, 99.5, 0.5}, {{
       Hold[$CellContext`bankroll$$], 500}, 10, 1000, 5}, {
      Hold["Assets you already have"], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`yesAssets$$], 0}, -500, 500, 5}, {{
       Hold[$CellContext`noAssets$$], 0}, -500, 500, 5}}, Typeset`size$$ = {
    576., {204., 211.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`start$802335$$ = 
    0, $CellContext`belief$802336$$ = 0, $CellContext`bankroll$802337$$ = 
    0, $CellContext`yesAssets$802338$$ = 0, $CellContext`noAssets$802339$$ = 
    0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bankroll$$ = 500, $CellContext`belief$$ = 
        60, $CellContext`noAssets$$ = 0, $CellContext`start$$ = 
        40, $CellContext`yesAssets$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`start$$, $CellContext`start$802335$$, 0], 
        Hold[$CellContext`belief$$, $CellContext`belief$802336$$, 0], 
        Hold[$CellContext`bankroll$$, $CellContext`bankroll$802337$$, 0], 
        Hold[$CellContext`yesAssets$$, $CellContext`yesAssets$802338$$, 0], 
        Hold[$CellContext`noAssets$$, $CellContext`noAssets$802339$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      With[{$CellContext`tradeto$ = ReplaceAll[$CellContext`tradeto, 
           Last[
            NMaximize[{
              If[
               
               And[$CellContext`yesCost[$CellContext`start$$, \
$CellContext`tradeto] + $CellContext`bankroll$$ + $CellContext`yesAssets$$ > 
                0, $CellContext`noCost[$CellContext`start$$, \
$CellContext`tradeto] + $CellContext`bankroll$$ + $CellContext`noAssets$$ > 
                0], ($CellContext`belief$$/100) 
                Log[$CellContext`yesCost[$CellContext`start$$, \
$CellContext`tradeto] + $CellContext`bankroll$$ + $CellContext`yesAssets$$] + \
(1 - $CellContext`belief$$/100) 
                Log[$CellContext`noCost[$CellContext`start$$, \
$CellContext`tradeto] + $CellContext`bankroll$$ + $CellContext`noAssets$$], \
-10^1000], 
              Inequality[
              1, LessEqual, $CellContext`tradeto, Less, 
               99]}, $CellContext`tradeto]]]}, 
        Column[{
          Grid[{{"Trade to:", 
             StringJoin[
              ToString[
               Round[$CellContext`tradeto$]], "%"]}, {}, {
            "New Assets", "", "Final Assets"}, {
             $CellContext`tinyRound[
              $CellContext`yesCost[$CellContext`start$$, 
               Round[$CellContext`tradeto$]]], "Yes", 
             $CellContext`tinyRound[$CellContext`yesCost[$CellContext`start$$, 
                Round[$CellContext`tradeto$]] + $CellContext`yesAssets$$]}, {
             $CellContext`tinyRound[
              $CellContext`noCost[$CellContext`start$$, 
               Round[$CellContext`tradeto$]]], "No", 
             $CellContext`tinyRound[$CellContext`noCost[$CellContext`start$$, 
                Round[$CellContext`tradeto$]] + $CellContext`noAssets$$]}}], 
          Plot[
           $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`target, $CellContext`noAssets$$, \
$CellContext`yesAssets$$], {$CellContext`target, 0.5, 99.5}, ImageSize -> 
           Large, ColorFunctionScaling -> False, 
           AxesLabel -> {"%", "E[Earnings after trade]"}, 
           PlotRange -> {{0, 
             100}, {-100, 
              50 + $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`belief$$, $CellContext`noAssets$$, \
$CellContext`yesAssets$$]}}, ColorFunction -> 
           Function[{$CellContext`x, $CellContext`y}, 
             If[$CellContext`y > 0, Blue, Orange]], 
           GridLines -> {{$CellContext`start$$, $CellContext`belief$$, \
$CellContext`tradeto$}, {
              $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`belief$$, $CellContext`noAssets$$, \
$CellContext`yesAssets$$]}}, 
           Ticks -> {{
             0, 10, 25, 50, 75, 90, 
              100, {$CellContext`start$$, "S"}, {$CellContext`tradeto$, 
               "T"}, {$CellContext`belief$$, "B"}}, Automatic}, Epilog -> {
             Text[
              Round[
               $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`belief$$, $CellContext`noAssets$$, \
$CellContext`yesAssets$$]], {$CellContext`belief$$, 
               $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`belief$$, $CellContext`noAssets$$, \
$CellContext`yesAssets$$]}, {
               If[$CellContext`belief$$ < $CellContext`tradeto$, Right, Left],
                Bottom}], 
             Text[
              Round[
               $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`tradeto$, $CellContext`noAssets$$, \
$CellContext`yesAssets$$]], {$CellContext`tradeto$, 
               $CellContext`expectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`tradeto$, $CellContext`noAssets$$, \
$CellContext`yesAssets$$]}, {
               If[$CellContext`belief$$ < $CellContext`tradeto$, Left, Right],
                Bottom}]}]}]], 
      "Specifications" :> {{{$CellContext`start$$, 40}, 0.5, 99.5, 0.5, 
         Appearance -> "Labeled"}, {{$CellContext`belief$$, 60}, 0.5, 99.5, 
         0.5, Appearance -> "Labeled"}, {{$CellContext`bankroll$$, 500}, 10, 
         1000, 5, Appearance -> "Labeled"}, 
        "Assets you already have", {{$CellContext`yesAssets$$, 0}, -500, 500, 
         5, Appearance -> "Labeled"}, {{$CellContext`noAssets$$, 0}, -500, 
         500, 5, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{627., {312., 319.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`yesCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, $CellContext`t/$CellContext`i], $CellContext`noCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, (100 - $CellContext`t)/(
          100 - $CellContext`i)], $CellContext`tinyRound[
         Pattern[$CellContext`v, 
          Blank[]]] := Round[$CellContext`v, 
         If[
          And[Abs[$CellContext`v] < 1, $CellContext`v != 0], 0.1, 
          1]], $CellContext`expectedOutcome[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := ($CellContext`b/
          100) $CellContext`yesCost[$CellContext`i, $CellContext`t] + (
          1 - $CellContext`b/
          100) $CellContext`noCost[$CellContext`i, $CellContext`t], \
$CellContext`expectedOutcome[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`neg, 
           Blank[]], 0], 
         Optional[
          Pattern[$CellContext`pos, 
           Blank[]], 0]] := ($CellContext`b/
          100) ($CellContext`pos + $CellContext`yesCost[$CellContext`i, \
$CellContext`t]) + (1 - $CellContext`b/
          100) ($CellContext`neg + $CellContext`noCost[$CellContext`i, \
$CellContext`t])}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.616538538686227*^9, 3.6165385565862503`*^9}, 
   3.616538705857788*^9, {3.61653887931771*^9, 3.616538883795966*^9}, 
   3.616538915744793*^9, {3.616538958570243*^9, 3.6165389796724496`*^9}, {
   3.616539011721283*^9, 3.6165390290942764`*^9}, 3.616539453376544*^9, {
   3.6165394913967185`*^9, 3.616539529929922*^9}, 3.6165395933645506`*^9, {
   3.6165396540480213`*^9, 3.6165396711089973`*^9}, 3.6165397248650723`*^9, {
   3.6165397842804704`*^9, 3.616539793989026*^9}, 3.616539999291768*^9, {
   3.6165400848386617`*^9, 3.6165400891989107`*^9}, {3.616540231088026*^9, 
   3.6165402675881143`*^9}, 3.616540330433709*^9, {3.616540503456605*^9, 
   3.6165405208325987`*^9}, 3.616540580319001*^9, {3.6165406437836313`*^9, 
   3.6165406955895944`*^9}, {3.6165407735070515`*^9, 3.616540784397674*^9}, {
   3.616540864104233*^9, 3.6165408736957817`*^9}, 3.6165409140280886`*^9, {
   3.616541034107957*^9, 3.6165410607284794`*^9}, {3.6165411480014706`*^9, 
   3.61654115252873*^9}, {3.6165419041617208`*^9, 3.6165419248049016`*^9}, {
   3.6165426998932343`*^9, 3.616542745576847*^9}, 3.616543700250451*^9, 
   3.616594823943559*^9, 3.616594921039113*^9, 3.616595004453884*^9, {
   3.6165951728145137`*^9, 3.616595215482954*^9}, 3.61659526384172*^9, {
   3.6165953242241735`*^9, 3.616595344981361*^9}, {3.61659541962463*^9, 
   3.6165954388467293`*^9}, 3.616595523286559*^9, {3.616595581583894*^9, 
   3.6165955914074554`*^9}, {3.6165956877929688`*^9, 3.6165957156125593`*^9}, 
   3.6165960094393654`*^9, {3.616596071809933*^9, 3.616596106847937*^9}, {
   3.616596144368083*^9, 3.616596165135271*^9}, {3.6165962064416337`*^9, 
   3.616596215586157*^9}}]
}, Open  ]],

Cell[TextData[StyleBox["LMSR calculations taking into account time value of \
points (money)", "Section"]], "Text",
 CellChangeTimes->{{3.6165428292846346`*^9, 3.6165428478106947`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TVyesCost", "[", 
   RowBox[{
   "start_", ",", "target_", ",", "annualRate_", ",", "monthsToResolution_"}],
    "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"yesCost", "[", 
      RowBox[{"start", ",", "target"}], "]"}], ">", 
     RowBox[{"noCost", "[", 
      RowBox[{"start", ",", "target"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TimeValue", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"yesCost", "[", 
         RowBox[{"start", ",", "target"}], "]"}], "-", 
        RowBox[{"noCost", "[", 
         RowBox[{"start", ",", "target"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"EffectiveInterest", "[", 
        RowBox[{
         RowBox[{"annualRate", "/", "100"}], ",", 
         RowBox[{"1", "/", "12"}]}], "]"}], ",", 
       RowBox[{"-", "monthsToResolution"}]}], "]"}], "+", 
     RowBox[{"noCost", "[", 
      RowBox[{"start", ",", "target"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"yesCost", "[", 
     RowBox[{"start", ",", "target"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6163774775820584`*^9, 3.6163775038795624`*^9}, {
   3.617142966110795*^9, 3.6171429970205626`*^9}, 3.6171431189345355`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TVnoCost", "[", 
   RowBox[{
   "start_", ",", "target_", ",", "annualRate_", ",", "monthsToResolution_"}],
    "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"noCost", "[", 
      RowBox[{"start", ",", "target"}], "]"}], ">", 
     RowBox[{"yesCost", "[", 
      RowBox[{"start", ",", "target"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TimeValue", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"noCost", "[", 
         RowBox[{"start", ",", "target"}], "]"}], "-", 
        RowBox[{"yesCost", "[", 
         RowBox[{"start", ",", "target"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"EffectiveInterest", "[", 
        RowBox[{
         RowBox[{"annualRate", "/", "100"}], ",", 
         RowBox[{"1", "/", "12"}]}], "]"}], ",", 
       RowBox[{"-", "monthsToResolution"}]}], "]"}], "+", 
     RowBox[{"yesCost", "[", 
      RowBox[{"start", ",", "target"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"noCost", "[", 
     RowBox[{"start", ",", "target"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6163775113769913`*^9, 3.61637752288865*^9}, {
   3.617142973397211*^9, 3.6171430030189056`*^9}, 3.617143120525627*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", "  ", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TVyesCost", "[", 
        RowBox[{
        "start", ",", "target", ",", "annualRate", ",", 
         "monthsToResolution"}], "]"}], ",", "\n", "       ", 
       RowBox[{"TVnoCost", "[", 
        RowBox[{
        "start", ",", "target", ",", "annualRate", ",", 
         "monthsToResolution"}], "]"}]}], "}"}], ",", "\n", "       ", 
     RowBox[{"{", 
      RowBox[{"target", ",", "0.5", ",", "99.5"}], "}"}], ",", "\n", 
     "       ", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\n", "       ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<%\>\"", ",", "Points"}], "}"}]}], ",", "\n", "       ", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", "\n", 
     "       ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Red"}], "}"}]}], ",", "\n", "       ", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "500"}], ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
     "\n", "       ", 
     RowBox[{"GridLines", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"start", ",", "tradeto", ",", 
          RowBox[{"100", "-", "start"}]}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", "\n", "       ", 
     RowBox[{"Ticks", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", "10", ",", "25", ",", "50", ",", "75", ",", "90", ",", 
          "100", ",", 
          RowBox[{"{", 
           RowBox[{"start", ",", "S"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"tradeto", ",", "T"}], "}"}]}], "}"}], ",", "Automatic"}], 
       "}"}]}], ",", "\n", "       ", 
     RowBox[{"Epilog", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"TVyesCost", "[", 
            RowBox[{
            "start", ",", "tradeto", ",", "annualRate", ",", 
             "monthsToResolution"}], "]"}], "]"}], ",", "\n", 
          "                     ", 
          RowBox[{"{", 
           RowBox[{"tradeto", ",", 
            RowBox[{"TVyesCost", "[", 
             RowBox[{
             "start", ",", "tradeto", ",", "annualRate", ",", 
              "monthsToResolution"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", "         ", 
          RowBox[{"{", 
           RowBox[{"Center", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"start", "<", "tradeto"}], ",", "Bottom", ",", "Top"}], 
             "]"}]}], "}"}]}], "]"}], ",", "\n", "                ", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"TVnoCost", "[", 
            RowBox[{
            "start", ",", "tradeto", ",", "annualRate", ",", 
             "monthsToResolution"}], "]"}], "]"}], ",", "\n", 
          "                     ", 
          RowBox[{"{", 
           RowBox[{"tradeto", ",", 
            RowBox[{"TVnoCost", "[", 
             RowBox[{
             "start", ",", "tradeto", ",", "annualRate", ",", 
              "monthsToResolution"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", "         ", 
          RowBox[{"{", 
           RowBox[{"Center", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"start", ">", "tradeto"}], ",", "Bottom", ",", "Top"}], 
             "]"}]}], "}"}]}], "]"}]}], "\n", "               ", "}"}]}]}], 
    "\n", "       ", "]"}], ",", "\n", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"start", ",", 
       RowBox[{"N", "[", "33.3", "]"}]}], "}"}], ",", "0.5", ",", "99.5", ",",
      "0.5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", "\n",
    "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tradeto", ",", 
       RowBox[{"N", "[", "66.6", "]"}]}], "}"}], ",", "0.5", ",", "99.5", ",",
      "0.5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"annualRate", ",", 
       RowBox[{"N", "[", "10", "]"}]}], "}"}], ",", "0.1", ",", "20", ",", 
     "0.1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"monthsToResolution", ",", "2"}], "}"}], ",", "0", ",", "48", 
     ",", 
     RowBox[{
      RowBox[{"1", "Appearance"}], "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
   ",", "\n", "  ", 
   RowBox[{"SaveDefinitions", " ", "->", " ", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.616376940413334*^9, 3.6163769404383354`*^9}, {
  3.6163769853379035`*^9, 3.6163772186472483`*^9}, {3.616377282175882*^9, 
  3.6163773050841923`*^9}, {3.616377356774149*^9, 3.616377360103339*^9}, {
  3.6163773961644015`*^9, 3.6163774126263433`*^9}, {3.616377534671324*^9, 
  3.6163775900214896`*^9}, {3.6163776260735517`*^9, 3.61637769440646*^9}, {
  3.6163777366728773`*^9, 3.616377740001068*^9}, {3.616377985416105*^9, 
  3.6163780024240775`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`annualRate$$ = 
    9.9, $CellContext`monthsToResolution$$ = 
    3.3000000000000003`, $CellContext`start$$ = 10., $CellContext`tradeto$$ = 
    69., Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`start$$], 33.3}, 0.5, 99.5, 0.5}, {{
       Hold[$CellContext`tradeto$$], 66.6}, 0.5, 99.5, 0.5}, {{
       Hold[$CellContext`annualRate$$], 10.}, 0.1, 20, 0.1}, {{
       Hold[$CellContext`monthsToResolution$$], 2}, 0, 48}}, 
    Typeset`size$$ = {576., {175., 179.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`start$210553$$ = 0, $CellContext`tradeto$210554$$ = 
    0, $CellContext`annualRate$210555$$ = 
    0, $CellContext`monthsToResolution$210556$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`annualRate$$ = 
        10., $CellContext`monthsToResolution$$ = 2, $CellContext`start$$ = 
        33.3, $CellContext`tradeto$$ = 66.6}, "ControllerVariables" :> {
        Hold[$CellContext`start$$, $CellContext`start$210553$$, 0], 
        Hold[$CellContext`tradeto$$, $CellContext`tradeto$210554$$, 0], 
        Hold[$CellContext`annualRate$$, $CellContext`annualRate$210555$$, 0], 
        Hold[$CellContext`monthsToResolution$$, \
$CellContext`monthsToResolution$210556$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`TVyesCost[$CellContext`start$$, $CellContext`target, \
$CellContext`annualRate$$, $CellContext`monthsToResolution$$], 
         $CellContext`TVnoCost[$CellContext`start$$, $CellContext`target, \
$CellContext`annualRate$$, $CellContext`monthsToResolution$$]}, \
{$CellContext`target, 0.5, 99.5}, ImageSize -> Large, 
        AxesLabel -> {"%", $CellContext`Points}, PerformanceGoal -> "Speed", 
        PlotStyle -> {Green, Red}, PlotRange -> {{0, 100}, {-500, Automatic}},
         GridLines -> {{$CellContext`start$$, $CellContext`tradeto$$, 
           100 - $CellContext`start$$}, {}}, 
        Ticks -> {{
          0, 10, 25, 50, 75, 90, 
           100, {$CellContext`start$$, $CellContext`S}, \
{$CellContext`tradeto$$, $CellContext`T}}, Automatic}, Epilog -> {
          Text[
           Round[
            $CellContext`TVyesCost[$CellContext`start$$, \
$CellContext`tradeto$$, $CellContext`annualRate$$, \
$CellContext`monthsToResolution$$]], {$CellContext`tradeto$$, 
            $CellContext`TVyesCost[$CellContext`start$$, \
$CellContext`tradeto$$, $CellContext`annualRate$$, \
$CellContext`monthsToResolution$$]}, {Center, 
            If[$CellContext`start$$ < $CellContext`tradeto$$, Bottom, Top]}], 
          Text[
           Round[
            $CellContext`TVnoCost[$CellContext`start$$, \
$CellContext`tradeto$$, $CellContext`annualRate$$, \
$CellContext`monthsToResolution$$]], {$CellContext`tradeto$$, 
            $CellContext`TVnoCost[$CellContext`start$$, \
$CellContext`tradeto$$, $CellContext`annualRate$$, \
$CellContext`monthsToResolution$$]}, {Center, 
            
            If[$CellContext`start$$ > $CellContext`tradeto$$, Bottom, 
             Top]}]}], 
      "Specifications" :> {{{$CellContext`start$$, 33.3}, 0.5, 99.5, 0.5, 
         Appearance -> "Labeled"}, {{$CellContext`tradeto$$, 66.6}, 0.5, 99.5,
          0.5, Appearance -> "Labeled"}, {{$CellContext`annualRate$$, 10.}, 
         0.1, 20, 0.1, Appearance -> 
         "Labeled"}, {{$CellContext`monthsToResolution$$, 2}, 0, 48, 
         Appearance -> "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{627., {261., 268.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`TVyesCost[
         Pattern[$CellContext`start, 
          Blank[]], 
         Pattern[$CellContext`target, 
          Blank[]], 
         Pattern[$CellContext`annualRate, 
          Blank[]], 
         Pattern[$CellContext`monthsToResolution, 
          Blank[]]] := 
       If[$CellContext`yesCost[$CellContext`start, $CellContext`target] > \
$CellContext`noCost[$CellContext`start, $CellContext`target], 
         TimeValue[$CellContext`yesCost[$CellContext`start, \
$CellContext`target] - $CellContext`noCost[$CellContext`start, \
$CellContext`target], 
           
           EffectiveInterest[$CellContext`annualRate/100, 1/
            12], -$CellContext`monthsToResolution] + \
$CellContext`noCost[$CellContext`start, $CellContext`target], 
         $CellContext`yesCost[$CellContext`start, $CellContext`target]], \
$CellContext`yesCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, $CellContext`t/$CellContext`i], $CellContext`t[
         Pattern[$CellContext`e, 
          Blank[]]] := 
       Reduce[$CellContext`e, $CellContext`x, Reals], $CellContext`noCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, (100 - $CellContext`t)/(
          100 - $CellContext`i)], $CellContext`TVnoCost[
         Pattern[$CellContext`start, 
          Blank[]], 
         Pattern[$CellContext`target, 
          Blank[]], 
         Pattern[$CellContext`annualRate, 
          Blank[]], 
         Pattern[$CellContext`monthsToResolution, 
          Blank[]]] := 
       If[$CellContext`noCost[$CellContext`start, $CellContext`target] > \
$CellContext`yesCost[$CellContext`start, $CellContext`target], 
         TimeValue[$CellContext`noCost[$CellContext`start, \
$CellContext`target] - $CellContext`yesCost[$CellContext`start, \
$CellContext`target], 
           
           EffectiveInterest[$CellContext`annualRate/100, 1/
            12], -$CellContext`monthsToResolution] + \
$CellContext`yesCost[$CellContext`start, $CellContext`target], 
         $CellContext`noCost[$CellContext`start, $CellContext`target]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.616376942210437*^9, {3.6163771082639346`*^9, 3.616377115242334*^9}, {
   3.6163771597968817`*^9, 3.616377188593529*^9}, 3.6163772199913254`*^9, 
   3.6163773068632936`*^9, 3.616377361656428*^9, {3.6163774050079074`*^9, 
   3.6163774140684257`*^9}, 3.616377695294511*^9, 3.616377740957123*^9, {
   3.616377986742181*^9, 3.6163780032991276`*^9}, 3.617143012464446*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TVexpectedOutcome", " ", "[", 
   RowBox[{
   "i_", ",", "b_", ",", "t_", ",", "annualRate_", ",", "monthsToResolution_",
     ",", 
    RowBox[{"neg_:", "0"}], ",", 
    RowBox[{"pos_:", "0"}]}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"b", "/", "100"}], "*", 
    RowBox[{"(", 
     RowBox[{"pos", "+", 
      RowBox[{"TVyesCost", "[", 
       RowBox[{"i", ",", "t", ",", "annualRate", ",", "monthsToResolution"}], 
       "]"}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"b", "/", "100"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"neg", "+", 
      RowBox[{"TVnoCost", "[", 
       RowBox[{"i", ",", "t", ",", "annualRate", ",", "monthsToResolution"}], 
       "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.617147597518696*^9, 3.6171476933871794`*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"best", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"belief", "<", "start"}], ",", "\[IndentingNewLine]", 
         RowBox[{"NArgMax", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"TVexpectedOutcome", " ", "[", 
              RowBox[{
              "start", ",", "belief", ",", "target", ",", "annualRate", ",", 
               "monthsToResolution"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"belief", "<=", "target", "\[LessEqual]", "start"}]}], 
            "}"}], ",", "target", ",", 
           RowBox[{"WorkingPrecision", "\[Rule]", "MachinePrecision"}]}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"NArgMax", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"TVexpectedOutcome", " ", "[", 
              RowBox[{
              "start", ",", "belief", ",", "target", ",", "annualRate", ",", 
               "monthsToResolution"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"start", "<=", "target", "\[LessEqual]", "belief"}]}], 
            "}"}], ",", "target", ",", 
           RowBox[{"WorkingPrecision", "\[Rule]", "MachinePrecision"}]}], 
          "]"}]}], "]"}]}], "}"}], ",", "\n", "  ", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"TVexpectedOutcome", " ", "[", 
         RowBox[{
         "start", ",", "belief", ",", "target", ",", "annualRate", ",", 
          "monthsToResolution"}], "]"}], "}"}], ",", "\n", "       ", 
       RowBox[{"{", 
        RowBox[{"target", ",", "0.5", ",", "99.5"}], "}"}], ",", "\n", 
       "       ", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\n", "       ", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<%\>\"", ",", "\"\<Present Points\>\""}], "}"}]}], ",", 
       "\n", "       ", 
       RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
       "\[IndentingNewLine]", "  ", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", "\n", 
       "       ", 
       RowBox[{"ColorFunction", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"y", ">", "0"}], ",", "Blue", ",", "Orange"}], "]"}]}], 
         "]"}]}], ",", "\n", "       ", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "100"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "500"}], ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotPoints", "\[Rule]", "99"}], ",", "\n", "       ", 
       RowBox[{"GridLines", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"start", ",", "belief", ",", "best"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"TVexpectedOutcome", " ", "[", 
            RowBox[{
            "start", ",", "belief", ",", "best", ",", "annualRate", ",", 
             "monthsToResolution"}], "]"}], "}"}]}], "}"}]}], ",", "\n", 
       "       ", 
       RowBox[{"Ticks", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "0", ",", "10", ",", "25", ",", "50", ",", "75", ",", "90", ",", 
            "100", ",", 
            RowBox[{"{", 
             RowBox[{"start", ",", "S"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"belief", ",", "B"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"best", ",", "max"}], "}"}]}], "}"}], ",", "Automatic"}],
          "}"}]}], ",", 
       RowBox[{"Epilog", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{"TVexpectedOutcome", " ", "[", 
              RowBox[{
              "start", ",", "belief", ",", "belief", ",", "annualRate", ",", 
               "monthsToResolution"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"belief", ",", 
              RowBox[{"TVexpectedOutcome", " ", "[", 
               RowBox[{
               "start", ",", "belief", ",", "belief", ",", "annualRate", ",", 
                "monthsToResolution"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Center", ",", "Bottom"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{"TVexpectedOutcome", " ", "[", 
              RowBox[{
              "start", ",", "belief", ",", "best", ",", "annualRate", ",", 
               "monthsToResolution"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"best", ",", 
              RowBox[{"TVexpectedOutcome", " ", "[", 
               RowBox[{
               "start", ",", "belief", ",", "best", ",", "annualRate", ",", 
                "monthsToResolution"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Center", ",", "Bottom"}], "}"}]}], "]"}]}], "\n", 
         "               ", "}"}]}]}], "\n", "       ", "]"}]}], "]"}], ",", 
   "\n", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"start", ",", 
       RowBox[{"N", "[", "33.3", "]"}]}], "}"}], ",", "0.5", ",", "99.5", ",",
      "0.5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", "\n",
    "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"belief", ",", 
       RowBox[{"N", "[", "66.6", "]"}]}], "}"}], ",", "0.5", ",", "99.5", ",",
      "0.5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"annualRate", ",", 
       RowBox[{"N", "[", "10", "]"}]}], "}"}], ",", "0.1", ",", "20", ",", 
     "0.1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"monthsToResolution", ",", "2"}], "}"}], ",", "0", ",", "48", 
     ",", 
     RowBox[{
      RowBox[{"1", "Appearance"}], "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", "\n", "  ", 
   RowBox[{"SaveDefinitions", " ", "->", " ", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.617143467825491*^9, 3.617143551594282*^9}, {
   3.61714712396161*^9, 3.617147186411182*^9}, 3.6171472557551484`*^9, {
   3.617147292432246*^9, 3.6171474095519447`*^9}, {3.6171475089306293`*^9, 
   3.617147575458434*^9}, {3.6171477066089354`*^9, 3.6171477575518494`*^9}, {
   3.6171477897606916`*^9, 3.617147821781523*^9}, {3.6171478541463747`*^9, 
   3.6171480148545666`*^9}, {3.617148364865586*^9, 3.6171483660676546`*^9}, {
   3.617148478719098*^9, 3.617148497802189*^9}, {3.617148529712014*^9, 
   3.6171485495471487`*^9}, 3.6171486279916353`*^9, {3.6171487187148247`*^9, 
   3.6171487243081446`*^9}, {3.6171488267930064`*^9, 3.617148868495392*^9}, {
   3.6171489293858747`*^9, 3.617148936599287*^9}}],

Cell["\<\
The maximization being performed in this one is slow, so it only attempts to \
update when you release a control.\
\>", "Text",
 CellChangeTimes->{{3.6171490151097775`*^9, 3.6171490355229454`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`annualRate$$ = 0.6, $CellContext`belief$$ = 
    0.5, $CellContext`monthsToResolution$$ = 48., $CellContext`start$$ = 51., 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`start$$], 33.3}, 0.5, 99.5, 0.5}, {{
       Hold[$CellContext`belief$$], 66.6}, 0.5, 99.5, 0.5}, {{
       Hold[$CellContext`annualRate$$], 10.}, 0.1, 20, 0.1}, {{
       Hold[$CellContext`monthsToResolution$$], 2}, 0, 48}}, 
    Typeset`size$$ = {576., {173., 178.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`start$705214$$ = 0, $CellContext`belief$705215$$ = 
    0, $CellContext`annualRate$705216$$ = 
    0, $CellContext`monthsToResolution$705217$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`annualRate$$ = 10., $CellContext`belief$$ = 
        66.6, $CellContext`monthsToResolution$$ = 2, $CellContext`start$$ = 
        33.3}, "ControllerVariables" :> {
        Hold[$CellContext`start$$, $CellContext`start$705214$$, 0], 
        Hold[$CellContext`belief$$, $CellContext`belief$705215$$, 0], 
        Hold[$CellContext`annualRate$$, $CellContext`annualRate$705216$$, 0], 
        Hold[$CellContext`monthsToResolution$$, \
$CellContext`monthsToResolution$705217$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      With[{$CellContext`best$ = 
         If[$CellContext`belief$$ < $CellContext`start$$, 
           NArgMax[{
             $CellContext`TVexpectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`target, $CellContext`annualRate$$, \
$CellContext`monthsToResolution$$], $CellContext`belief$$ <= \
$CellContext`target <= $CellContext`start$$}, $CellContext`target, 
            WorkingPrecision -> MachinePrecision], 
           NArgMax[{
             $CellContext`TVexpectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`target, $CellContext`annualRate$$, \
$CellContext`monthsToResolution$$], $CellContext`start$$ <= \
$CellContext`target <= $CellContext`belief$$}, $CellContext`target, 
            WorkingPrecision -> MachinePrecision]]}, 
        Plot[{
          $CellContext`TVexpectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`target, $CellContext`annualRate$$, \
$CellContext`monthsToResolution$$]}, {$CellContext`target, 0.5, 99.5}, 
         ImageSize -> Large, AxesLabel -> {"%", "Present Points"}, 
         PerformanceGoal -> "Speed", ColorFunctionScaling -> False, 
         ColorFunction -> Function[{$CellContext`x, $CellContext`y}, 
           If[$CellContext`y > 0, Blue, Orange]], 
         PlotRange -> {{0, 100}, {-500, Automatic}}, PlotPoints -> 99, 
         GridLines -> {{$CellContext`start$$, $CellContext`belief$$, \
$CellContext`best$}, {
            $CellContext`TVexpectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`best$, $CellContext`annualRate$$, \
$CellContext`monthsToResolution$$]}}, 
         Ticks -> {{
           0, 10, 25, 50, 75, 90, 
            100, {$CellContext`start$$, $CellContext`S}, \
{$CellContext`belief$$, $CellContext`B}, {$CellContext`best$, \
$CellContext`max}}, Automatic}, Epilog -> {
           Text[
            Round[
             $CellContext`TVexpectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`belief$$, $CellContext`annualRate$$, \
$CellContext`monthsToResolution$$]], {$CellContext`belief$$, 
             $CellContext`TVexpectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`belief$$, $CellContext`annualRate$$, \
$CellContext`monthsToResolution$$]}, {Center, Bottom}], 
           Text[
            Round[
             $CellContext`TVexpectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`best$, $CellContext`annualRate$$, \
$CellContext`monthsToResolution$$]], {$CellContext`best$, 
             $CellContext`TVexpectedOutcome[$CellContext`start$$, \
$CellContext`belief$$, $CellContext`best$, $CellContext`annualRate$$, \
$CellContext`monthsToResolution$$]}, {Center, Bottom}]}]], 
      "Specifications" :> {{{$CellContext`start$$, 33.3}, 0.5, 99.5, 0.5, 
         Appearance -> "Labeled"}, {{$CellContext`belief$$, 66.6}, 0.5, 99.5, 
         0.5, Appearance -> "Labeled"}, {{$CellContext`annualRate$$, 10.}, 
         0.1, 20, 0.1, Appearance -> 
         "Labeled"}, {{$CellContext`monthsToResolution$$, 2}, 0, 48, 
         Appearance -> "Labeled"}}, "Options" :> {ContinuousAction -> False}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{627., {260., 267.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`TVexpectedOutcome[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]], 
         Pattern[$CellContext`annualRate, 
          Blank[]], 
         Pattern[$CellContext`monthsToResolution, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`neg, 
           Blank[]], 0], 
         Optional[
          Pattern[$CellContext`pos, 
           Blank[]], 0]] := ($CellContext`b/
          100) ($CellContext`pos + $CellContext`TVyesCost[$CellContext`i, \
$CellContext`t, $CellContext`annualRate, $CellContext`monthsToResolution]) + (
          1 - $CellContext`b/
          100) ($CellContext`neg + $CellContext`TVnoCost[$CellContext`i, \
$CellContext`t, $CellContext`annualRate, $CellContext`monthsToResolution]), \
$CellContext`t[
         Pattern[$CellContext`e, 
          Blank[]]] := 
       Reduce[$CellContext`e, $CellContext`x, Reals], $CellContext`TVyesCost[
         Pattern[$CellContext`start, 
          Blank[]], 
         Pattern[$CellContext`target, 
          Blank[]], 
         Pattern[$CellContext`annualRate, 
          Blank[]], 
         Pattern[$CellContext`monthsToResolution, 
          Blank[]]] := 
       If[$CellContext`yesCost[$CellContext`start, $CellContext`target] > \
$CellContext`noCost[$CellContext`start, $CellContext`target], 
         TimeValue[$CellContext`yesCost[$CellContext`start, \
$CellContext`target] - $CellContext`noCost[$CellContext`start, \
$CellContext`target], 
           
           EffectiveInterest[$CellContext`annualRate/100, 1/
            12], -$CellContext`monthsToResolution] + \
$CellContext`noCost[$CellContext`start, $CellContext`target], 
         $CellContext`yesCost[$CellContext`start, $CellContext`target]], \
$CellContext`yesCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, $CellContext`t/$CellContext`i], $CellContext`noCost[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := 
       100 Log[2, (100 - $CellContext`t)/(
          100 - $CellContext`i)], $CellContext`TVnoCost[
         Pattern[$CellContext`start, 
          Blank[]], 
         Pattern[$CellContext`target, 
          Blank[]], 
         Pattern[$CellContext`annualRate, 
          Blank[]], 
         Pattern[$CellContext`monthsToResolution, 
          Blank[]]] := 
       If[$CellContext`noCost[$CellContext`start, $CellContext`target] > \
$CellContext`yesCost[$CellContext`start, $CellContext`target], 
         TimeValue[$CellContext`noCost[$CellContext`start, \
$CellContext`target] - $CellContext`yesCost[$CellContext`start, \
$CellContext`target], 
           EffectiveInterest[$CellContext`annualRate/100, 1/
            12], -$CellContext`monthsToResolution] + \
$CellContext`yesCost[$CellContext`start, $CellContext`target], 
         $CellContext`noCost[$CellContext`start, $CellContext`target]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.617148872275608*^9, {3.6171489377233515`*^9, 3.617148996853733*^9}}]
},
WindowSize->{1272, 1157},
WindowMargins->{{Automatic, 39}, {7, Automatic}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 285, 8, 31, "Input"],
Cell[846, 30, 330, 11, 31, "Input"],
Cell[CellGroupData[{
Cell[1201, 45, 2778, 50, 354, "Input",
 CellID->124],
Cell[3982, 97, 5295, 97, 486, "Output"]
}, Open  ]],
Cell[9292, 197, 382, 10, 31, "Input"],
Cell[9677, 209, 383, 10, 31, "Input"],
Cell[10063, 221, 527, 15, 37, "Input"],
Cell[10593, 238, 492, 11, 31, "Input"],
Cell[11088, 251, 445, 13, 31, "Input"],
Cell[11536, 266, 430, 8, 68, "Text"],
Cell[11969, 276, 9771, 219, 492, "Input"],
Cell[21743, 497, 135, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[21903, 502, 4358, 98, 372, "Input"],
Cell[26264, 602, 11630, 245, 320, "Output"]
}, Open  ]],
Cell[37909, 850, 232, 6, 31, "Input",
 CellID->524],
Cell[CellGroupData[{
Cell[38166, 860, 1873, 36, 354, "Input",
 CellID->525],
Cell[40042, 898, 5637, 115, 492, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45716, 1018, 1065, 22, 218, "Input",
 CellID->591],
Cell[46784, 1042, 5111, 107, 498, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51932, 1154, 2460, 52, 660, "Input",
 CellID->594],
Cell[54395, 1208, 6550, 138, 584, "Output"]
}, Open  ]],
Cell[60960, 1349, 474, 12, 116, "Input",
 CellID->611],
Cell[CellGroupData[{
Cell[61459, 1365, 970, 20, 201, "Input",
 CellID->612],
Cell[62432, 1387, 2916, 52, 470, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65385, 1444, 4923, 123, 412, "Input"],
Cell[70311, 1569, 6099, 130, 498, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76447, 1704, 3666, 96, 312, "Input"],
Cell[80116, 1802, 2787, 54, 506, "Output"]
}, Open  ]],
Cell[82918, 1859, 420, 11, 31, "Input"],
Cell[83341, 1872, 484, 10, 87, "Text"],
Cell[CellGroupData[{
Cell[83850, 1886, 4222, 108, 332, "Input"],
Cell[88075, 1996, 3802, 68, 532, "Output"]
}, Open  ]],
Cell[91892, 2067, 469, 8, 84, "Text"],
Cell[CellGroupData[{
Cell[92386, 2079, 12116, 270, 772, "Input"],
Cell[104505, 2351, 10163, 195, 648, "Output"]
}, Open  ]],
Cell[114683, 2549, 185, 2, 46, "Text"],
Cell[114871, 2553, 1252, 32, 92, "Input"],
Cell[116126, 2587, 1246, 32, 92, "Input"],
Cell[CellGroupData[{
Cell[117397, 2623, 5462, 140, 512, "Input"],
Cell[122862, 2765, 6966, 140, 546, "Output"]
}, Open  ]],
Cell[129843, 2908, 866, 25, 52, "Input"],
Cell[130712, 2935, 7420, 176, 592, "Input"],
Cell[138135, 3113, 207, 4, 30, "Text"],
Cell[138345, 3119, 8507, 173, 544, "Output"]
}
]
*)

(* End of internal cache information *)
